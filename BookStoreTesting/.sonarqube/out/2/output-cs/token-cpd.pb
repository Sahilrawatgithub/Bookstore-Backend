ê
;D:\BridgeLabz\BookStore\RepoLayer\Service\WishlistImplRL.cs
	namespace 	
RepositoryLayer
 
. 
Service !
{ 
public 

class 
WishlistImplRL 
:  !
IWishlistRL" -
{ 
private 
readonly 
UserContext $
_userContext% 1
;1 2
private 
readonly 
ILogger  
<  !
WishlistImplRL! /
>/ 0
_logger1 8
;8 9
private 
readonly 
	IDatabase "
_redisDatabase# 1
;1 2
public 
WishlistImplRL 
( 
UserContext )
userContext* 5
,5 6
ILogger7 >
<> ?
WishlistImplRL? M
>M N
loggerO U
,U V"
IConnectionMultiplexerW m"
connectionMultiplexer	n É
)
É Ñ
{ 	
_userContext 
= 
userContext &
;& '
_logger 
= 
logger 
; 
_redisDatabase 
= !
connectionMultiplexer 2
.2 3
GetDatabase3 >
(> ?
)? @
;@ A
} 	
public 
async 
Task 
< 
ResponseDTO %
<% &
string& ,
>, -
>- .
WishlistBookAsync/ @
(@ A
intA D
bookIdE K
,K L
intM P
userIdQ W
)W X
{ 	
try 
{   
_logger!! 
.!! 
LogInformation!! &
(!!& '
$str!!' l
,!!l m
bookId!!n t
,!!t u
userId!!v |
)!!| }
;!!} ~
var## 
book## 
=## 
await##  
_userContext##! -
.##- .
Books##. 3
.##3 4
FirstOrDefaultAsync##4 G
(##G H
x##H I
=>##J L
x##M N
.##N O
BookId##O U
==##V X
bookId##Y _
)##_ `
;##` a
if$$ 
($$ 
book$$ 
==$$ 
null$$  
)$$  !
{%% 
return&& 
new&& 
ResponseDTO&& *
<&&* +
string&&+ 1
>&&1 2
{'' 
Success(( 
=((  !
false((" '
,((' (
Message)) 
=))  !
$str))" 2
}** 
;** 
}++ 
var-- 
existingEntry-- !
=--" #
await--$ )
_userContext--* 6
.--6 7
WishList--7 ?
... 
FirstOrDefaultAsync.. (
(..( )
x..) *
=>..+ -
x... /
.../ 0
BookId..0 6
==..7 9
bookId..: @
&&..A C
x..D E
...E F
UserId..F L
==..M O
userId..P V
)..V W
;..W X
if00 
(00 
existingEntry00 !
!=00" $
null00% )
)00) *
{11 
return22 
new22 
ResponseDTO22 *
<22* +
string22+ 1
>221 2
{33 
Success44 
=44  !
false44" '
,44' (
Message55 
=55  !
$str55" <
}66 
;66 
}77 
var99 
newEntry99 
=99 
new99 "
WishListEntity99# 1
{:: 
UserId;; 
=;; 
userId;; #
,;;# $
BookId<< 
=<< 
bookId<< #
}== 
;== 
await?? 
_userContext?? "
.??" #
WishList??# +
.??+ ,
AddAsync??, 4
(??4 5
newEntry??5 =
)??= >
;??> ?
await@@ 
_userContext@@ "
.@@" #
SaveChangesAsync@@# 3
(@@3 4
)@@4 5
;@@5 6
awaitAA #
InvalidateWishlistCacheAA -
(AA- .
userIdAA. 4
)AA4 5
;AA5 6
_loggerCC 
.CC 
LogInformationCC &
(CC& '
$strCC' g
,CCg h
bookIdCCi o
,CCo p
userIdCCq w
)CCw x
;CCx y
returnEE 
newEE 
ResponseDTOEE &
<EE& '
stringEE' -
>EE- .
{FF 
SuccessGG 
=GG 
trueGG "
,GG" #
MessageHH 
=HH 
$strHH 6
}II 
;II 
}JJ 
catchKK 
(KK 
	ExceptionKK 
exKK 
)KK  
{LL 
_loggerMM 
.MM 
LogErrorMM  
(MM  !
exMM! #
,MM# $
$strMM% D
)MMD E
;MME F
returnNN 
newNN 
ResponseDTONN &
<NN& '
stringNN' -
>NN- .
{OO 
SuccessPP 
=PP 
falsePP #
,PP# $
MessageQQ 
=QQ 
$strQQ =
}RR 
;RR 
}SS 
}TT 	
publicVV 
asyncVV 
TaskVV 
<VV 
ResponseDTOVV %
<VV% &
ListVV& *
<VV* +
WishListEntityVV+ 9
>VV9 :
>VV: ;
>VV; <&
GetAllWishlistedBooksAsyncVV= W
(VVW X
intVVX [
userIdVV\ b
)VVb c
{WW 	
tryXX 
{YY 
_loggerZZ 
.ZZ 
LogInformationZZ &
(ZZ& '
$strZZ' O
)ZZO P
;ZZP Q
string[[ 
cacheKey[[ 
=[[  !
$"[[" $
$str[[$ -
{[[- .
userId[[. 4
}[[4 5
"[[5 6
;[[6 7
var\\ 

cachedData\\ 
=\\  
await\\! &
_redisDatabase\\' 5
.\\5 6
StringGetAsync\\6 D
(\\D E
cacheKey\\E M
)\\M N
;\\N O
if]] 
(]] 

cachedData]] 
.]] 
HasValue]] '
)]]' (
{^^ 
var__ 
books__ 
=__ 
JsonSerializer__  .
.__. /
Deserialize__/ :
<__: ;
List__; ?
<__? @
WishListEntity__@ N
>__N O
>__O P
(__P Q

cachedData__Q [
)__[ \
;__\ ]
return`` 
new`` 
ResponseDTO`` *
<``* +
List``+ /
<``/ 0
WishListEntity``0 >
>``> ?
>``? @
{aa 
Successbb 
=bb  !
truebb" &
,bb& '
Datacc 
=cc 
bookscc $
}dd 
;dd 
}ee 
elseff 
{gg 
varhh 
bookshh 
=hh 
awaithh  %
_userContexthh& 2
.hh2 3
WishListhh3 ;
.hh; <
Wherehh< A
(hhA B
xhhB C
=>hhD F
xhhG H
.hhH I
UserIdhhI O
==hhP R
userIdhhS Y
)hhY Z
.hhZ [
ToListAsynchh[ f
(hhf g
)hhg h
;hhh i
ifii 
(ii 
booksii 
.ii 
Countii #
>ii$ %
$numii& '
)ii' (
{jj 
awaitkk #
CacheAllWishlistedBookskk 5
(kk5 6
userIdkk6 <
)kk< =
;kk= >
returnll 
newll "
ResponseDTOll# .
<ll. /
Listll/ 3
<ll3 4
WishListEntityll4 B
>llB C
>llC D
{mm 
Successnn #
=nn$ %
truenn& *
,nn* +
Dataoo  
=oo! "
booksoo# (
}pp 
;pp 
}qq 
elserr 
{ss 
returntt 
newtt "
ResponseDTOtt# .
<tt. /
Listtt/ 3
<tt3 4
WishListEntitytt4 B
>ttB C
>ttC D
{uu 
Successvv #
=vv$ %
falsevv& +
,vv+ ,
Messageww #
=ww$ %
$strww& B
}xx 
;xx 
}yy 
}zz 
}{{ 
catch|| 
(|| 
	Exception|| 
ex|| 
)||  
{}} 
_logger~~ 
.~~ 
LogError~~  
(~~  !
ex~~! #
,~~# $
$str~~% T
)~~T U
;~~U V
return 
new 
ResponseDTO &
<& '
List' +
<+ ,
WishListEntity, :
>: ;
>; <
{
ÄÄ 
Success
ÅÅ 
=
ÅÅ 
false
ÅÅ #
,
ÅÅ# $
Message
ÇÇ 
=
ÇÇ 
$str
ÇÇ M
}
ÉÉ 
;
ÉÉ 
}
ÑÑ 
}
ÖÖ 	
public
ÜÜ 
async
ÜÜ 
Task
ÜÜ 
<
ÜÜ 
ResponseDTO
ÜÜ %
<
ÜÜ% &
string
ÜÜ& ,
>
ÜÜ, -
>
ÜÜ- .)
RemoveBookFromWishlistAsync
ÜÜ/ J
(
ÜÜJ K
int
ÜÜK N
bookId
ÜÜO U
,
ÜÜU V
int
ÜÜW Z
userId
ÜÜ[ a
)
ÜÜa b
{
áá 	
try
àà 
{
ââ 
_logger
ää 
.
ää 
LogInformation
ää &
(
ää& '
$str
ää' P
)
ääP Q
;
ääQ R
var
ãã 
book
ãã 
=
ãã 
await
ãã  
_userContext
ãã! -
.
ãã- .
WishList
ãã. 6
.
ãã6 7!
FirstOrDefaultAsync
ãã7 J
(
ããJ K
x
ããK L
=>
ããM O
x
ããP Q
.
ããQ R
BookId
ããR X
==
ããY [
bookId
ãã\ b
&&
ããc e
x
ããf g
.
ããg h
UserId
ããh n
==
ãão q
userId
ããr x
)
ããx y
;
ããy z
if
åå 
(
åå 
book
åå 
==
åå 
null
åå  
)
åå  !
{
çç 
return
éé 
new
éé 
ResponseDTO
éé *
<
éé* +
string
éé+ 1
>
éé1 2
{
èè 
Success
êê 
=
êê  !
false
êê" '
,
êê' (
Message
ëë 
=
ëë  !
$str
ëë" >
}
íí 
;
íí 
}
ìì 
_userContext
îî 
.
îî 
WishList
îî %
.
îî% &
Remove
îî& ,
(
îî, -
book
îî- 1
)
îî1 2
;
îî2 3
await
ïï 
_userContext
ïï "
.
ïï" #
SaveChangesAsync
ïï# 3
(
ïï3 4
)
ïï4 5
;
ïï5 6
await
ññ %
InvalidateWishlistCache
ññ -
(
ññ- .
userId
ññ. 4
)
ññ4 5
;
ññ5 6
return
óó 
new
óó 
ResponseDTO
óó &
<
óó& '
string
óó' -
>
óó- .
{
òò 
Success
ôô 
=
ôô 
true
ôô "
,
ôô" #
Message
öö 
=
öö 
$str
öö :
}
õõ 
;
õõ 
}
úú 
catch
ùù 
(
ùù 
	Exception
ùù 
ex
ùù 
)
ùù  
{
ûû 
_logger
üü 
.
üü 
LogError
üü  
(
üü  !
ex
üü! #
,
üü# $
$str
üü% W
)
üüW X
;
üüX Y
return
†† 
new
†† 
ResponseDTO
†† &
<
††& '
string
††' -
>
††- .
{
°° 
Success
¢¢ 
=
¢¢ 
false
¢¢ #
,
¢¢# $
Message
££ 
=
££ 
$str
££ P
}
§§ 
;
§§ 
}
•• 
}
¶¶ 	
public
ßß 
async
ßß 
Task
ßß 
<
ßß 
ResponseDTO
ßß %
<
ßß% &
string
ßß& ,
>
ßß, -
>
ßß- . 
ClearWishlistAsync
ßß/ A
(
ßßA B
int
ßßB E
userId
ßßF L
)
ßßL M
{
®® 	
try
©© 
{
™™ 
_logger
´´ 
.
´´ 
LogInformation
´´ &
(
´´& '
$str
´´' E
)
´´E F
;
´´F G
var
¨¨ 
books
¨¨ 
=
¨¨ 
await
¨¨ !
_userContext
¨¨" .
.
¨¨. /
WishList
¨¨/ 7
.
¨¨7 8
Where
¨¨8 =
(
¨¨= >
x
¨¨> ?
=>
¨¨@ B
x
¨¨C D
.
¨¨D E
UserId
¨¨E K
==
¨¨L N
userId
¨¨O U
)
¨¨U V
.
¨¨V W
ToListAsync
¨¨W b
(
¨¨b c
)
¨¨c d
;
¨¨d e
if
≠≠ 
(
≠≠ 
books
≠≠ 
.
≠≠ 
Count
≠≠ 
>
≠≠  !
$num
≠≠" #
)
≠≠# $
{
ÆÆ 
_userContext
ØØ  
.
ØØ  !
WishList
ØØ! )
.
ØØ) *
RemoveRange
ØØ* 5
(
ØØ5 6
books
ØØ6 ;
)
ØØ; <
;
ØØ< =
await
∞∞ 
_userContext
∞∞ &
.
∞∞& '
SaveChangesAsync
∞∞' 7
(
∞∞7 8
)
∞∞8 9
;
∞∞9 :
await
±± %
InvalidateWishlistCache
±± 1
(
±±1 2
userId
±±2 8
)
±±8 9
;
±±9 :
return
≤≤ 
new
≤≤ 
ResponseDTO
≤≤ *
<
≤≤* +
string
≤≤+ 1
>
≤≤1 2
{
≥≥ 
Success
¥¥ 
=
¥¥  !
true
¥¥" &
,
¥¥& '
Message
µµ 
=
µµ  !
$str
µµ" A
}
∂∂ 
;
∂∂ 
}
∑∑ 
else
∏∏ 
{
ππ 
return
∫∫ 
new
∫∫ 
ResponseDTO
∫∫ *
<
∫∫* +
string
∫∫+ 1
>
∫∫1 2
{
ªª 
Success
ºº 
=
ºº  !
false
ºº" '
,
ºº' (
Message
ΩΩ 
=
ΩΩ  !
$str
ΩΩ" >
}
ææ 
;
ææ 
}
øø 
}
¿¿ 
catch
¡¡ 
(
¡¡ 
	Exception
¡¡ 
ex
¡¡ 
)
¡¡  
{
¬¬ 
_logger
√√ 
.
√√ 
LogError
√√  
(
√√  !
ex
√√! #
,
√√# $
$str
√√% M
)
√√M N
;
√√N O
return
ƒƒ 
new
ƒƒ 
ResponseDTO
ƒƒ &
<
ƒƒ& '
string
ƒƒ' -
>
ƒƒ- .
{
≈≈ 
Success
∆∆ 
=
∆∆ 
false
∆∆ #
,
∆∆# $
Message
«« 
=
«« 
$str
«« F
}
»» 
;
»» 
}
…… 
}
   	
private
ÀÀ 
async
ÀÀ 
Task
ÀÀ %
CacheAllWishlistedBooks
ÀÀ 2
(
ÀÀ2 3
int
ÀÀ3 6
userId
ÀÀ7 =
)
ÀÀ= >
{
ÃÃ 	
try
ÕÕ 
{
ŒŒ 
_logger
œœ 
.
œœ 
LogInformation
œœ &
(
œœ& '
$str
œœ' V
)
œœV W
;
œœW X
string
–– 
cacheKey
–– 
=
––  !
$"
––" $
$str
––$ -
{
––- .
userId
––. 4
}
––4 5
"
––5 6
;
––6 7
var
—— 
books
—— 
=
—— 
await
—— !
_userContext
——" .
.
——. /
WishList
——/ 7
.
——7 8
Where
——8 =
(
——= >
x
——> ?
=>
——@ B
x
——C D
.
——D E
UserId
——E K
==
——L N
userId
——O U
)
——U V
.
——V W
ToListAsync
——W b
(
——b c
)
——c d
;
——d e
if
““ 
(
““ 
books
““ 
.
““ 
Count
““ 
>
““  !
$num
““" #
)
““# $
{
”” 
var
‘‘ 
serializedOrders
‘‘ (
=
‘‘) *
JsonSerializer
‘‘+ 9
.
‘‘9 :
	Serialize
‘‘: C
(
‘‘C D
books
‘‘D I
)
‘‘I J
;
‘‘J K
await
’’ 
_redisDatabase
’’ (
.
’’( )
StringSetAsync
’’) 7
(
’’7 8
cacheKey
’’8 @
,
’’@ A
serializedOrders
’’B R
,
’’R S
TimeSpan
’’T \
.
’’\ ]
FromMinutes
’’] h
(
’’h i
$num
’’i k
)
’’k l
)
’’l m
;
’’m n
_logger
÷÷ 
.
÷÷ 
LogInformation
÷÷ *
(
÷÷* +
$str
÷÷+ @
)
÷÷@ A
;
÷÷A B
}
◊◊ 
else
ÿÿ 
{
ŸŸ 
_logger
⁄⁄ 
.
⁄⁄ 
LogInformation
⁄⁄ *
(
⁄⁄* +
$str
⁄⁄+ P
)
⁄⁄P Q
;
⁄⁄Q R
}
€€ 
}
‹‹ 
catch
›› 
(
›› 
	Exception
›› 
ex
›› 
)
››  
{
ﬁﬁ 
_logger
ﬂﬂ 
.
ﬂﬂ 
LogError
ﬂﬂ  
(
ﬂﬂ  !
ex
ﬂﬂ! #
,
ﬂﬂ# $
$str
ﬂﬂ% T
)
ﬂﬂT U
;
ﬂﬂU V
}
‡‡ 
}
·· 	
private
‚‚ 
async
‚‚ 
Task
‚‚ %
InvalidateWishlistCache
‚‚ 2
(
‚‚2 3
int
‚‚3 6
userId
‚‚7 =
)
‚‚= >
{
„„ 	
try
‰‰ 
{
ÂÂ 
_logger
ÊÊ 
.
ÊÊ 
LogInformation
ÊÊ &
(
ÊÊ& '
$str
ÊÊ' P
)
ÊÊP Q
;
ÊÊQ R
string
ÁÁ 
cacheKey
ÁÁ 
=
ÁÁ  !
$"
ÁÁ" $
$str
ÁÁ$ -
{
ÁÁ- .
userId
ÁÁ. 4
}
ÁÁ4 5
"
ÁÁ5 6
;
ÁÁ6 7
await
ËË 
_redisDatabase
ËË $
.
ËË$ %
KeyDeleteAsync
ËË% 3
(
ËË3 4
cacheKey
ËË4 <
)
ËË< =
;
ËË= >
_logger
ÈÈ 
.
ÈÈ 
LogInformation
ÈÈ &
(
ÈÈ& '
$str
ÈÈ' P
)
ÈÈP Q
;
ÈÈQ R
}
ÍÍ 
catch
ÎÎ 
(
ÎÎ 
	Exception
ÎÎ 
ex
ÎÎ 
)
ÎÎ  
{
ÏÏ 
_logger
ÌÌ 
.
ÌÌ 
LogError
ÌÌ  
(
ÌÌ  !
ex
ÌÌ! #
,
ÌÌ# $
$str
ÌÌ% W
)
ÌÌW X
;
ÌÌX Y
}
ÓÓ 
}
ÔÔ 	
}
 
}ÒÒ §s
8D:\BridgeLabz\BookStore\RepoLayer\Service\OrderImplRL.cs
	namespace 	
RepositoryLayer
 
. 
Service !
{ 
public 

class 
OrderImplRL 
: 
IOrderRL '
{ 
private 
readonly 
UserContext $
_userContext% 1
;1 2
private 
readonly 
	IDatabase "
_redisDatabase# 1
;1 2
private 
readonly 
ILogger  
<  !

BookImplRL! +
>+ ,
_logger- 4
;4 5
public 
OrderImplRL 
( 
UserContext &
context' .
,. /"
IConnectionMultiplexer0 F!
connectionMultiplexerG \
,\ ]
ILogger^ e
<e f

BookImplRLf p
>p q
loggerr x
)x y
{ 	
_userContext 
= 
context "
;" #
_redisDatabase 
= !
connectionMultiplexer 2
.2 3
GetDatabase3 >
(> ?
)? @
;@ A
_logger 
= 
logger 
; 
} 	
public 
async 
Task 
< 
ResponseDTO %
<% &
string& ,
>, -
>- .
OrderBookAsync/ =
(= >
OrderDTO> F
orderG L
,L M
intN Q
userIdR X
)X Y
{ 	
try 
{   
_logger!! 
.!! 
LogInformation!! &
(!!& '
$str!!' A
)!!A B
;!!B C
var"" 
book"" 
="" 
_userContext"" '
.""' (
Books""( -
.""- .
FirstOrDefault"". <
(""< =
x""= >
=>""? A
x""B C
.""C D
BookId""D J
==""K M
order""N S
.""S T
BookId""T Z
)""Z [
;""[ \
if## 
(## 
book## 
==## 
null##  
)##  !
{$$ 
_logger%% 
.%% 

LogWarning%% &
(%%& '
$str%%' 7
)%%7 8
;%%8 9
return&& 
new&& 
ResponseDTO&& *
<&&* +
string&&+ 1
>&&1 2
{'' 
Success(( 
=((  !
false((" '
,((' (
Message)) 
=))  !
$str))" 2
}** 
;** 
}++ 
if-- 
(-- 
book-- 
.-- 
Quantity-- !
<--" #
order--$ )
.--) *
Quantity--* 2
)--2 3
{.. 
_logger// 
.// 

LogWarning// &
(//& '
$str//' F
)//F G
;//G H
return00 
new00 
ResponseDTO00 *
<00* +
string00+ 1
>001 2
{11 
Success22 
=22  !
false22" '
,22' (
Message33 
=33  !
$str33" A
}44 
;44 
}55 
var66 
address66 
=66 
_userContext66 *
.66* +
	Addresses66+ 4
.664 5
FirstOrDefault665 C
(66C D
x66D E
=>66F H
x66I J
.66J K
	AddressId66K T
==66U W
order66X ]
.66] ^
	AddressId66^ g
&&66h j
x66k l
.66l m
UserId66m s
==66t v
userId66w }
)66} ~
;66~ 
if77 
(77 
address77 
==77 
null77 #
)77# $
{88 
_logger99 
.99 

LogWarning99 &
(99& '
$str99' C
)99C D
;99D E
return:: 
new:: 
ResponseDTO:: *
<::* +
string::+ 1
>::1 2
{;; 
Success<< 
=<<  !
false<<" '
,<<' (
Message== 
===  !
$str==" 3
}>> 
;>> 
}?? 
bookAA 
.AA 
QuantityAA 
-=AA  
orderAA! &
.AA& '
QuantityAA' /
;AA/ 0
varBB 
orderEntityBB 
=BB  !
newBB" %
OrderEntityBB& 1
{CC 
BookIdDD 
=DD 
orderDD "
.DD" #
BookIdDD# )
,DD) *
UserIdEE 
=EE 
userIdEE #
,EE# $
	AddressIdFF 
=FF 
orderFF  %
.FF% &
	AddressIdFF& /
,FF/ 0
	OrderDateGG 
=GG 
DateTimeGG  (
.GG( )
UtcNowGG) /
}HH 
;HH 
awaitII 
_userContextII "
.II" #
OrdersII# )
.II) *
AddAsyncII* 2
(II2 3
orderEntityII3 >
)II> ?
;II? @
awaitJJ 
_userContextJJ "
.JJ" #
SaveChangesAsyncJJ# 3
(JJ3 4
)JJ4 5
;JJ5 6
awaitKK (
InvalidateAllUserOrdersCacheKK 2
(KK2 3
userIdKK3 9
)KK9 :
;KK: ;
returnLL 
newLL 
ResponseDTOLL &
<LL& '
stringLL' -
>LL- .
{MM 
SuccessNN 
=NN 
trueNN "
,NN" #
MessageOO 
=OO 
$strOO 9
,OO9 :
DataPP 
=PP 
$"PP 
$strPP ;
{PP; <
orderPP< A
.PPA B
QuantityPPB J
}PPJ K
$strPPK V
{PPV W
bookPPW [
.PP[ \
BookNamePP\ d
}PPd e
"PPe f
}QQ 
;QQ 
}RR 
catchSS 
(SS 
	ExceptionSS 
exSS 
)SS  
{TT 
_loggerUU 
.UU 
LogErrorUU  
(UU  !
exUU! #
,UU# $
$strUU% P
)UUP Q
;UUQ R
returnVV 
newVV 
ResponseDTOVV &
<VV& '
stringVV' -
>VV- .
{WW 
SuccessXX 
=XX 
falseXX #
,XX# $
MessageYY 
=YY 
exYY  
.YY  !
MessageYY! (
}ZZ 
;ZZ 
}[[ 
}\\ 	
public]] 
async]] 
Task]] 
<]] 
ResponseDTO]] %
<]]% &
List]]& *
<]]* +
OrderEntity]]+ 6
>]]6 7
>]]7 8
>]]8 9
GetAllOrdersAsync]]: K
(]]K L
int]]L O
userId]]P V
)]]V W
{^^ 	
try__ 
{`` 
_loggeraa 
.aa 
LogInformationaa &
(aa& '
$straa' E
)aaE F
;aaF G
stringbb 
cacheKeybb 
=bb  !
$"bb" $
$strbb$ +
{bb+ ,
userIdbb, 2
}bb2 3
"bb3 4
;bb4 5
varcc 
cachedOrderscc  
=cc! "
awaitcc# (
_redisDatabasecc) 7
.cc7 8
StringGetAsynccc8 F
(ccF G
cacheKeyccG O
)ccO P
;ccP Q
ifdd 
(dd 
cachedOrdersdd  
.dd  !
HasValuedd! )
)dd) *
{ee 
_loggergg 
.gg 
LogInformationgg *
(gg* +
$strgg+ H
)ggH I
;ggI J
varhh 
ordershh 
=hh  
JsonSerializerhh! /
.hh/ 0
Deserializehh0 ;
<hh; <
Listhh< @
<hh@ A
OrderEntityhhA L
>hhL M
>hhM N
(hhN O
cachedOrdershhO [
)hh[ \
;hh\ ]
ifii 
(ii 
ordersii 
.ii 
Countii $
>ii% &
$numii' (
)ii( )
{jj 
returnkk 
newkk "
ResponseDTOkk# .
<kk. /
Listkk/ 3
<kk3 4
OrderEntitykk4 ?
>kk? @
>kk@ A
{ll 
Successmm #
=mm$ %
truemm& *
,mm* +
Messagenn #
=nn$ %
$strnn& E
,nnE F
Dataoo  
=oo! "
ordersoo# )
}pp 
;pp 
}qq 
elserr 
{ss 
returntt 
newtt "
ResponseDTOtt# .
<tt. /
Listtt/ 3
<tt3 4
OrderEntitytt4 ?
>tt? @
>tt@ A
{uu 
Successvv #
=vv$ %
falsevv& +
,vv+ ,
Messageww #
=ww$ %
$strww& 6
}xx 
;xx 
}yy 
}zz 
var{{ 
ordersFromDb{{  
={{! "
await{{# (
_userContext{{) 5
.{{5 6
Orders{{6 <
.{{< =
Where{{= B
({{B C
x{{C D
=>{{E G
x{{H I
.{{I J
UserId{{J P
=={{Q S
userId{{T Z
){{Z [
.{{[ \
ToListAsync{{\ g
({{g h
){{h i
;{{i j
if|| 
(|| 
ordersFromDb||  
.||  !
Count||! &
>||& '
$num||' (
)||( )
{}} 
await~~ 
CacheAllUserOrders~~ ,
(~~, -
userId~~- 3
)~~3 4
;~~4 5
return 
new 
ResponseDTO *
<* +
List+ /
</ 0
OrderEntity0 ;
>; <
>< =
{
ÄÄ 
Success
ÅÅ 
=
ÅÅ  !
true
ÅÅ" &
,
ÅÅ& '
Message
ÇÇ 
=
ÇÇ  !
$str
ÇÇ" A
,
ÇÇA B
Data
ÉÉ 
=
ÉÉ 
ordersFromDb
ÉÉ +
}
ÑÑ 
;
ÑÑ 
}
ÖÖ 
return
ÜÜ 
new
ÜÜ 
ResponseDTO
ÜÜ &
<
ÜÜ& '
List
ÜÜ' +
<
ÜÜ+ ,
OrderEntity
ÜÜ, 7
>
ÜÜ7 8
>
ÜÜ8 9
{
áá 
Success
àà 
=
àà 
false
àà #
,
àà# $
Message
ââ 
=
ââ 
$str
ââ /
}
ää 
;
ää 
}
ãã 
catch
åå 
(
åå 
	Exception
åå 
ex
åå 
)
åå  
{
çç 
_logger
éé 
.
éé 
LogError
éé  
(
éé  !
ex
éé! #
,
éé# $
$str
éé% Q
)
ééQ R
;
ééR S
return
èè 
new
èè 
ResponseDTO
èè &
<
èè& '
List
èè' +
<
èè+ ,
OrderEntity
èè, 7
>
èè7 8
>
èè8 9
{
êê 
Success
ëë 
=
ëë 
false
ëë #
,
ëë# $
Message
íí 
=
íí 
ex
íí  
.
íí  !
Message
íí! (
}
ìì 
;
ìì 
}
îî 
}
ïï 	
private
ññ 
async
ññ 
Task
ññ  
CacheAllUserOrders
ññ -
(
ññ- .
int
ññ. 1
orderId
ññ2 9
)
ññ9 :
{
óó 	
try
òò 
{
ôô 
_logger
öö 
.
öö 
LogInformation
öö &
(
öö& '
$str
öö' L
)
ööL M
;
ööM N
string
õõ 
cacheKey
õõ 
=
õõ  !
$"
õõ" $
$str
õõ$ +
{
õõ+ ,
orderId
õõ, 3
}
õõ3 4
"
õõ4 5
;
õõ5 6
var
úú 
orders
úú 
=
úú 
await
úú "
_userContext
úú# /
.
úú/ 0
Orders
úú0 6
.
úú6 7
Where
úú7 <
(
úú< =
x
úú= >
=>
úú? A
x
úúB C
.
úúC D
OrderId
úúD K
==
úúL N
orderId
úúO V
)
úúV W
.
úúW X
ToListAsync
úúX c
(
úúc d
)
úúd e
;
úúe f
if
ùù 
(
ùù 
orders
ùù 
!=
ùù 
null
ùù "
&&
ùù# %
orders
ùù& ,
.
ùù, -
Any
ùù- 0
(
ùù0 1
)
ùù1 2
)
ùù2 3
{
ûû 
var
üü 
serializedOrders
üü (
=
üü) *
JsonSerializer
üü+ 9
.
üü9 :
	Serialize
üü: C
(
üüC D
orders
üüD J
)
üüJ K
;
üüK L
await
†† 
_redisDatabase
†† (
.
††( )
StringSetAsync
††) 7
(
††7 8
cacheKey
††8 @
,
††@ A
serializedOrders
††B R
,
††R S
TimeSpan
††T \
.
††\ ]
FromMinutes
††] h
(
††h i
$num
††i k
)
††k l
)
††l m
;
††m n
_logger
°° 
.
°° 
LogInformation
°° *
(
°°* +
$str
°°+ L
)
°°L M
;
°°M N
}
¢¢ 
}
££ 
catch
§§ 
(
§§ 
	Exception
§§ 
ex
§§ 
)
§§  
{
•• 
_logger
¶¶ 
.
¶¶ 
LogError
¶¶  
(
¶¶  !
ex
¶¶! #
,
¶¶# $
$str
¶¶% O
)
¶¶O P
;
¶¶P Q
}
ßß 
}
®® 	
private
™™ 
async
™™ 
Task
™™ *
InvalidateAllUserOrdersCache
™™ 7
(
™™7 8
int
™™8 ;
userId
™™< B
)
™™B C
{
´´ 	
try
¨¨ 
{
≠≠ 
_logger
ÆÆ 
.
ÆÆ 
LogInformation
ÆÆ &
(
ÆÆ& '
$str
ÆÆ' Q
)
ÆÆQ R
;
ÆÆR S
string
ØØ 
cacheKey
ØØ 
=
ØØ  !
$"
ØØ" $
$str
ØØ$ +
{
ØØ+ ,
userId
ØØ, 2
}
ØØ2 3
"
ØØ3 4
;
ØØ4 5
await
∞∞ 
_redisDatabase
∞∞ $
.
∞∞$ %
KeyDeleteAsync
∞∞% 3
(
∞∞3 4
cacheKey
∞∞4 <
)
∞∞< =
;
∞∞= >
_logger
±± 
.
±± 
LogInformation
±± &
(
±±& '
$str
±±' S
)
±±S T
;
±±T U
}
≤≤ 
catch
≥≥ 
(
≥≥ 
	Exception
≥≥ 
ex
≥≥ 
)
≥≥  
{
¥¥ 
_logger
µµ 
.
µµ 
LogError
µµ  
(
µµ  !
ex
µµ! #
,
µµ# $
$str
µµ% Z
)
µµZ [
;
µµ[ \
}
∂∂ 
}
∑∑ 	
}
∏∏ 
}ππ ©ø
7D:\BridgeLabz\BookStore\RepoLayer\Service\CartImplRL.cs
	namespace 	
RepositoryLayer
 
. 
Service !
{ 
public 

class 

CartImplRL 
: 
ICartRL #
{ 
private 
readonly 
UserContext $
_userContext% 1
;1 2
private 
readonly 
ILogger  
<  !

CartImplRL! +
>+ ,
_logger- 4
;4 5
private 
readonly 
	IDatabase "
_redisDatabase# 1
;1 2
public 

CartImplRL 
( 
UserContext %
userContext& 1
,1 2
ILogger3 :
<: ;

CartImplRL; E
>E F
loggerG M
,M N"
IConnectionMultiplexerO e!
connectionMultiplexerf {
){ |
{ 	
_userContext 
= 
userContext &
;& '
_logger 
= 
logger 
; 
_redisDatabase 
= !
connectionMultiplexer 2
.2 3
GetDatabase3 >
(> ?
)? @
;@ A
} 	
public 
async 
Task 
< 
ResponseDTO %
<% &
string& ,
>, -
>- .
AddToCartAsync/ =
(= >
AddToCartReqDTO> M
addToCartReqDTON ]
,] ^
int^ a
userIdb h
)h i
{ 	
try   
{!! 
_logger"" 
."" 
LogInformation"" &
(""& '
$str""' h
,""h i
addToCartReqDTO""j y
.""y z
BookId	""z Ä
,
""Ä Å
userId
""Ç à
)
""à â
;
""â ä
var## 
user## 
=## 
await##  
_userContext##! -
.##- .
Users##. 3
.##3 4
FirstOrDefaultAsync##4 G
(##G H
u##H I
=>##J L
u##M N
.##N O
UserId##O U
==##V X
userId##Y _
)##_ `
;##` a
if$$ 
($$ 
user$$ 
==$$ 
null$$  
)$$  !
{%% 
return&& 
new&& 
ResponseDTO&& *
<&&* +
string&&+ 1
>&&1 2
{'' 
Success(( 
=((  !
false((" '
,((' (
Message)) 
=))  !
$str))" 2
}** 
;** 
}++ 
var-- 
book-- 
=-- 
await--  
_userContext--! -
.--- .
Books--. 3
.--3 4
FirstOrDefaultAsync--4 G
(--G H
x--H I
=>--J L
x--M N
.--N O
BookId--O U
==--V X
addToCartReqDTO--Y h
.--h i
BookId--i o
)--o p
;--p q
if.. 
(.. 
book.. 
==.. 
null..  
)..  !
{// 
return00 
new00 
ResponseDTO00 *
<00* +
string00+ 1
>001 2
{11 
Success22 
=22  !
false22" '
,22' (
Message33 
=33  !
$str33" 2
}44 
;44 
}55 
var66 
existingEntry66 !
=66" #
await66$ )
_userContext66* 6
.666 7
Cart667 ;
.77 
FirstOrDefaultAsync77 (
(77( )
x77) *
=>77+ -
x77. /
.77/ 0
BookId770 6
==777 9
addToCartReqDTO77: I
.77I J
BookId77J P
&&77Q S
x77T U
.77U V
UserId77V \
==77] _
userId77` f
)77f g
;77g h
if88 
(88 
existingEntry88 !
!=88" $
null88% )
)88) *
{99 
return:: 
new:: 
ResponseDTO:: *
<::* +
string::+ 1
>::1 2
{;; 
Success<< 
=<<  !
false<<" '
,<<' (
Message== 
===  !
$str==" 8
}>> 
;>> 
}?? 
var@@ 
newEntry@@ 
=@@ 
new@@ "

CartEntity@@# -
{AA 
UserIdBB 
=BB 
userIdBB #
,BB# $
BookIdCC 
=CC 
addToCartReqDTOCC ,
.CC, -
BookIdCC- 3
,CC3 4
QuantityDD 
=DD 
addToCartReqDTODD .
.DD. /
QuantityDD/ 7
}EE 
;EE 
awaitFF 
_userContextFF "
.FF" #
CartFF# '
.FF' (
AddAsyncFF( 0
(FF0 1
newEntryFF1 9
)FF9 :
;FF: ;
awaitGG 
_userContextGG "
.GG" #
SaveChangesAsyncGG# 3
(GG3 4
)GG4 5
;GG5 6
awaitHH 
InvalidateCartCacheHH )
(HH) *
userIdHH* 0
)HH0 1
;HH1 2
returnII 
newII 
ResponseDTOII &
<II& '
stringII' -
>II- .
{JJ 
SuccessKK 
=KK 
trueKK "
,KK" #
MessageLL 
=LL 
$strLL ?
}MM 
;MM 
}NN 
catchOO 
(OO 
	ExceptionOO 
exOO 
)OO  
{PP 
_loggerQQ 
.QQ 
LogErrorQQ  
(QQ  !
exQQ! #
,QQ# $
$strQQ% @
)QQ@ A
;QQA B
returnRR 
newRR 
ResponseDTORR &
<RR& '
stringRR' -
>RR- .
{SS 
SuccessTT 
=TT 
falseTT #
,TT# $
MessageUU 
=UU 
$strUU S
}VV 
;VV 
}WW 
}XX 	
publicZZ 
asyncZZ 
TaskZZ 
<ZZ 
ResponseDTOZZ %
<ZZ% &
stringZZ& ,
>ZZ, -
>ZZ- .
ClearCartAsyncZZ/ =
(ZZ= >
intZZ> A
userIdZZB H
)ZZH I
{[[ 	
try\\ 
{]] 
_logger^^ 
.^^ 
LogInformation^^ &
(^^& '
$str^^' S
,^^S T
userId^^U [
)^^[ \
;^^\ ]
var__ 
	cartItems__ 
=__ 
await__  %
_userContext__& 2
.__2 3
Cart__3 7
.__7 8
Where__8 =
(__= >
x__> ?
=>__@ B
x__C D
.__D E
UserId__E K
==__L N
userId__O U
)__U V
.__V W
ToListAsync__W b
(__b c
)__c d
;__d e
if`` 
(`` 
	cartItems`` 
.`` 
Count`` #
==``$ &
$num``' (
)``( )
{aa 
returnbb 
newbb 
ResponseDTObb *
<bb* +
stringbb+ 1
>bb1 2
{cc 
Successdd 
=dd  !
falsedd" '
,dd' (
Messageee 
=ee  !
$stree" 9
}ff 
;ff 
}gg 
_userContexthh 
.hh 
Carthh !
.hh! "
RemoveRangehh" -
(hh- .
	cartItemshh. 7
)hh7 8
;hh8 9
awaitii 
_userContextii "
.ii" #
SaveChangesAsyncii# 3
(ii3 4
)ii4 5
;ii5 6
awaitjj 
InvalidateCartCachejj )
(jj) *
userIdjj* 0
)jj0 1
;jj1 2
returnkk 
newkk 
ResponseDTOkk &
<kk& '
stringkk' -
>kk- .
{ll 
Successmm 
=mm 
truemm "
,mm" #
Messagenn 
=nn 
$strnn 9
}oo 
;oo 
}pp 
catchqq 
(qq 
	Exceptionqq 
exqq 
)qq  
{rr 
_loggerss 
.ss 
LogErrorss  
(ss  !
exss! #
,ss# $
$strss% :
)ss: ;
;ss; <
returntt 
newtt 
ResponseDTOtt &
<tt& '
stringtt' -
>tt- .
{uu 
Successvv 
=vv 
falsevv #
,vv# $
Messageww 
=ww 
$strww I
}xx 
;xx 
}yy 
}zz 	
public|| 
async|| 
Task|| 
<|| 
ResponseDTO|| %
<||% &
string||& ,
>||, -
>||- .
RemoveFromCartAsync||/ B
(||B C
int||C F
cartId||G M
,||M N
int||O R
userId||S Y
)||Y Z
{}} 	
try~~ 
{ 
_logger
ÄÄ 
.
ÄÄ 
LogInformation
ÄÄ &
(
ÄÄ& '
$str
ÄÄ' r
,
ÄÄr s
cartId
ÄÄt z
,
ÄÄz {
userIdÄÄ| Ç
)ÄÄÇ É
;ÄÄÉ Ñ
var
ÅÅ 
cartItem
ÅÅ 
=
ÅÅ 
await
ÅÅ $
_userContext
ÅÅ% 1
.
ÅÅ1 2
Cart
ÅÅ2 6
.
ÅÅ6 7!
FirstOrDefaultAsync
ÅÅ7 J
(
ÅÅJ K
x
ÅÅK L
=>
ÅÅM O
x
ÅÅP Q
.
ÅÅQ R
CartId
ÅÅR X
==
ÅÅY [
cartId
ÅÅ\ b
&&
ÅÅc e
x
ÅÅf g
.
ÅÅg h
UserId
ÅÅh n
==
ÅÅo q
userId
ÅÅr x
)
ÅÅx y
;
ÅÅy z
if
ÇÇ 
(
ÇÇ 
cartItem
ÇÇ 
==
ÇÇ 
null
ÇÇ  $
)
ÇÇ$ %
{
ÉÉ 
return
ÑÑ 
new
ÑÑ 
ResponseDTO
ÑÑ *
<
ÑÑ* +
string
ÑÑ+ 1
>
ÑÑ1 2
{
ÖÖ 
Success
ÜÜ 
=
ÜÜ  !
false
ÜÜ" '
,
ÜÜ' (
Message
áá 
=
áá  !
$str
áá" 7
}
àà 
;
àà 
}
ââ 
_userContext
ää 
.
ää 
Cart
ää !
.
ää! "
Remove
ää" (
(
ää( )
cartItem
ää) 1
)
ää1 2
;
ää2 3
await
ãã 
_userContext
ãã "
.
ãã" #
SaveChangesAsync
ãã# 3
(
ãã3 4
)
ãã4 5
;
ãã5 6
await
åå !
InvalidateCartCache
åå )
(
åå) *
userId
åå* 0
)
åå0 1
;
åå1 2
return
çç 
new
çç 
ResponseDTO
çç &
<
çç& '
string
çç' -
>
çç- .
{
éé 
Success
èè 
=
èè 
true
èè "
,
èè" #
Message
êê 
=
êê 
$str
êê C
}
ëë 
;
ëë 
}
íí 
catch
ìì 
(
ìì 
	Exception
ìì 
ex
ìì 
)
ìì  
{
îî 
_logger
ïï 
.
ïï 
LogError
ïï  
(
ïï  !
ex
ïï! #
,
ïï# $
$str
ïï% D
)
ïïD E
;
ïïE F
return
ññ 
new
ññ 
ResponseDTO
ññ &
<
ññ& '
string
ññ' -
>
ññ- .
{
óó 
Success
òò 
=
òò 
false
òò #
,
òò# $
Message
ôô 
=
ôô 
$str
ôô W
}
öö 
;
öö 
}
õõ 
}
úú 	
public
ûû 
async
ûû 
Task
ûû 
<
ûû 
ResponseDTO
ûû %
<
ûû% &
string
ûû& ,
>
ûû, -
>
ûû- .
UpdateCartAsync
ûû/ >
(
ûû> ?
int
ûû? B
cartId
ûûC I
,
ûûI J
int
ûûK N
quantity
ûûO W
,
ûûW X
int
ûûY \
userId
ûû] c
)
ûûc d
{
üü 	
try
†† 
{
°° 
_logger
¢¢ 
.
¢¢ 
LogInformation
¢¢ &
(
¢¢& '
$str
¢¢' j
,
¢¢j k
cartId
¢¢l r
,
¢¢r s
userId
¢¢t z
)
¢¢z {
;
¢¢{ |
var
££ 
cartItem
££ 
=
££ 
await
££ $
_userContext
££% 1
.
££1 2
Cart
££2 6
.
££6 7!
FirstOrDefaultAsync
££7 J
(
££J K
x
££K L
=>
££M O
x
££P Q
.
££Q R
CartId
££R X
==
££Y [
cartId
££\ b
&&
££c e
x
££f g
.
££g h
UserId
££h n
==
££o q
userId
££r x
)
££x y
;
££y z
if
§§ 
(
§§ 
cartItem
§§ 
==
§§ 
null
§§  $
)
§§$ %
{
•• 
return
¶¶ 
new
¶¶ 
ResponseDTO
¶¶ *
<
¶¶* +
string
¶¶+ 1
>
¶¶1 2
{
ßß 
Success
®® 
=
®®  !
false
®®" '
,
®®' (
Message
©© 
=
©©  !
$str
©©" 7
}
™™ 
;
™™ 
}
´´ 
cartItem
¨¨ 
.
¨¨ 
Quantity
¨¨ !
=
¨¨" #
quantity
¨¨$ ,
;
¨¨, -
await
≠≠ 
_userContext
≠≠ "
.
≠≠" #
SaveChangesAsync
≠≠# 3
(
≠≠3 4
)
≠≠4 5
;
≠≠5 6
await
ÆÆ !
InvalidateCartCache
ÆÆ )
(
ÆÆ) *
userId
ÆÆ* 0
)
ÆÆ0 1
;
ÆÆ1 2
return
ØØ 
new
ØØ 
ResponseDTO
ØØ &
<
ØØ& '
string
ØØ' -
>
ØØ- .
{
∞∞ 
Success
±± 
=
±± 
true
±± "
,
±±" #
Message
≤≤ 
=
≤≤ 
$str
≤≤ 9
}
≥≥ 
;
≥≥ 
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
ex
µµ 
)
µµ  
{
∂∂ 
_logger
∑∑ 
.
∑∑ 
LogError
∑∑  
(
∑∑  !
ex
∑∑! #
,
∑∑# $
$str
∑∑% :
)
∑∑: ;
;
∑∑; <
return
∏∏ 
new
∏∏ 
ResponseDTO
∏∏ &
<
∏∏& '
string
∏∏' -
>
∏∏- .
{
ππ 
Success
∫∫ 
=
∫∫ 
false
∫∫ #
,
∫∫# $
Message
ªª 
=
ªª 
$str
ªª I
}
ºº 
;
ºº 
}
ΩΩ 
}
ææ 	
public
¿¿ 
async
¿¿ 
Task
¿¿ 
<
¿¿ 
ResponseDTO
¿¿ %
<
¿¿% &
List
¿¿& *
<
¿¿* +
CartResponseDTO
¿¿+ :
>
¿¿: ;
>
¿¿; <
>
¿¿< ="
GetAllCartItemsAsync
¿¿> R
(
¿¿R S
int
¿¿S V
userId
¿¿W ]
)
¿¿] ^
{
¡¡ 	
try
¬¬ 
{
√√ 
_logger
ƒƒ 
.
ƒƒ 
LogInformation
ƒƒ &
(
ƒƒ& '
$str
ƒƒ' [
,
ƒƒ[ \
userId
ƒƒ] c
)
ƒƒc d
;
ƒƒd e
string
≈≈ 
cacheKey
≈≈ 
=
≈≈  !
$"
≈≈" $
$str
≈≈$ )
{
≈≈) *
userId
≈≈* 0
}
≈≈0 1
"
≈≈1 2
;
≈≈2 3
var
«« 

cachedData
«« 
=
««  
await
««! &
_redisDatabase
««' 5
.
««5 6
StringGetAsync
««6 D
(
««D E
cacheKey
««E M
)
««M N
;
««N O
if
»» 
(
»» 

cachedData
»» 
.
»» 
HasValue
»» '
)
»»' (
{
…… 
var
   
cachedBooks
   #
=
  $ %
JsonSerializer
  & 4
.
  4 5
Deserialize
  5 @
<
  @ A
List
  A E
<
  E F
CartResponseDTO
  F U
>
  U V
>
  V W
(
  W X

cachedData
  X b
)
  b c
;
  c d
return
ÀÀ 
new
ÀÀ 
ResponseDTO
ÀÀ *
<
ÀÀ* +
List
ÀÀ+ /
<
ÀÀ/ 0
CartResponseDTO
ÀÀ0 ?
>
ÀÀ? @
>
ÀÀ@ A
{
ÃÃ 
Success
ÕÕ 
=
ÕÕ  !
true
ÕÕ" &
,
ÕÕ& '
Message
ŒŒ 
=
ŒŒ  !
$str
ŒŒ" K
,
ŒŒK L
Data
œœ 
=
œœ 
cachedBooks
œœ *
}
–– 
;
–– 
}
—— 
var
”” 
books
”” 
=
”” 
await
”” !
_userContext
””" .
.
””. /
Cart
””/ 3
.
‘‘ 
Where
‘‘ 
(
‘‘ 
x
‘‘ 
=>
‘‘ 
x
‘‘  !
.
‘‘! "
UserId
‘‘" (
==
‘‘) +
userId
‘‘, 2
)
‘‘2 3
.
’’ 
Select
’’ 
(
’’ 
x
’’ 
=>
’’  
new
’’! $
CartResponseDTO
’’% 4
{
÷÷ 
CartId
◊◊ 
=
◊◊  
x
◊◊! "
.
◊◊" #
CartId
◊◊# )
,
◊◊) *
BookId
ÿÿ 
=
ÿÿ  
x
ÿÿ! "
.
ÿÿ" #
Book
ÿÿ# '
.
ÿÿ' (
BookId
ÿÿ( .
,
ÿÿ. /
BookName
ŸŸ  
=
ŸŸ! "
x
ŸŸ# $
.
ŸŸ$ %
Book
ŸŸ% )
.
ŸŸ) *
BookName
ŸŸ* 2
,
ŸŸ2 3

AuthorName
⁄⁄ "
=
⁄⁄# $
x
⁄⁄% &
.
⁄⁄& '
Book
⁄⁄' +
.
⁄⁄+ ,

AuthorName
⁄⁄, 6
,
⁄⁄6 7
PricePerUnit
€€ $
=
€€% &
x
€€' (
.
€€( )
Book
€€) -
.
€€- .
Price
€€. 3
,
€€3 4
Quantity
‹‹  
=
‹‹! "
x
‹‹# $
.
‹‹$ %
Quantity
‹‹% -
,
‹‹- .

TotalPrice
›› "
=
››# $
x
››% &
.
››& '
Quantity
››' /
*
››0 1
x
››2 3
.
››3 4
Book
››4 8
.
››8 9
Price
››9 >
,
››> ?
}
ﬁﬁ 
)
ﬁﬁ 
.
ﬂﬂ 
ToListAsync
ﬂﬂ  
(
ﬂﬂ  !
)
ﬂﬂ! "
;
ﬂﬂ" #
if
·· 
(
·· 
books
·· 
.
·· 
Count
·· 
>
··  !
$num
··" #
)
··# $
{
‚‚ 
await
„„ 
CacheAllCartBooks
„„ +
(
„„+ ,
userId
„„, 2
)
„„2 3
;
„„3 4
return
ÂÂ 
new
ÂÂ 
ResponseDTO
ÂÂ *
<
ÂÂ* +
List
ÂÂ+ /
<
ÂÂ/ 0
CartResponseDTO
ÂÂ0 ?
>
ÂÂ? @
>
ÂÂ@ A
{
ÊÊ 
Success
ÁÁ 
=
ÁÁ  !
true
ÁÁ" &
,
ÁÁ& '
Message
ËË 
=
ËË  !
$str
ËË" H
,
ËËH I
Data
ÈÈ 
=
ÈÈ 
books
ÈÈ $
}
ÍÍ 
;
ÍÍ 
}
ÎÎ 
return
ÌÌ 
new
ÌÌ 
ResponseDTO
ÌÌ &
<
ÌÌ& '
List
ÌÌ' +
<
ÌÌ+ ,
CartResponseDTO
ÌÌ, ;
>
ÌÌ; <
>
ÌÌ< =
{
ÓÓ 
Success
ÔÔ 
=
ÔÔ 
false
ÔÔ #
,
ÔÔ# $
Message
 
=
 
$str
 6
}
ÒÒ 
;
ÒÒ 
}
ÚÚ 
catch
ÛÛ 
(
ÛÛ 
	Exception
ÛÛ 
ex
ÛÛ 
)
ÛÛ  
{
ÙÙ 
_logger
ıı 
.
ıı 
LogError
ıı  
(
ıı  !
ex
ıı! #
,
ıı# $
$str
ıı% f
,
ııf g
userId
ııh n
)
ıın o
;
ııo p
return
ˆˆ 
new
ˆˆ 
ResponseDTO
ˆˆ &
<
ˆˆ& '
List
ˆˆ' +
<
ˆˆ+ ,
CartResponseDTO
ˆˆ, ;
>
ˆˆ; <
>
ˆˆ< =
{
˜˜ 
Success
¯¯ 
=
¯¯ 
false
¯¯ #
,
¯¯# $
Message
˘˘ 
=
˘˘ 
$str
˘˘ M
}
˙˙ 
;
˙˙ 
}
˚˚ 
}
¸¸ 	
private
˛˛ 
async
˛˛ 
Task
˛˛ !
InvalidateCartCache
˛˛ .
(
˛˛. /
int
˛˛/ 2
userId
˛˛3 9
)
˛˛9 :
{
ˇˇ 	
var
ÄÄ 
cacheKey
ÄÄ 
=
ÄÄ 
$"
ÄÄ 
$str
ÄÄ "
{
ÄÄ" #
userId
ÄÄ# )
}
ÄÄ) *
"
ÄÄ* +
;
ÄÄ+ ,
await
ÅÅ 
_redisDatabase
ÅÅ  
.
ÅÅ  !
KeyDeleteAsync
ÅÅ! /
(
ÅÅ/ 0
cacheKey
ÅÅ0 8
)
ÅÅ8 9
;
ÅÅ9 :
}
ÇÇ 	
private
ÉÉ 
async
ÉÉ 
Task
ÉÉ 
CacheAllCartBooks
ÉÉ ,
(
ÉÉ, -
int
ÉÉ- 0
userId
ÉÉ1 7
)
ÉÉ7 8
{
ÑÑ 	
try
ÖÖ 
{
ÜÜ 
_logger
áá 
.
áá 
LogInformation
áá &
(
áá& '
$str
áá' P
)
ááP Q
;
ááQ R
string
àà 
cacheKey
àà 
=
àà  !
$"
àà" $
$str
àà$ )
{
àà) *
userId
àà* 0
}
àà0 1
"
àà1 2
;
àà2 3
var
ää 
	cartItems
ää 
=
ää 
await
ää  %
_userContext
ää& 2
.
ää2 3
Cart
ää3 7
.
ãã 
Where
ãã 
(
ãã 
x
ãã 
=>
ãã 
x
ãã  !
.
ãã! "
UserId
ãã" (
==
ãã) +
userId
ãã, 2
)
ãã2 3
.
åå 
Select
åå 
(
åå 
x
åå 
=>
åå  
new
åå! $
CartResponseDTO
åå% 4
{
çç 
CartId
éé 
=
éé  
x
éé! "
.
éé" #
CartId
éé# )
,
éé) *
BookId
èè 
=
èè  
x
èè! "
.
èè" #
Book
èè# '
.
èè' (
BookId
èè( .
,
èè. /
BookName
êê  
=
êê! "
x
êê# $
.
êê$ %
Book
êê% )
.
êê) *
BookName
êê* 2
,
êê2 3

AuthorName
ëë "
=
ëë# $
x
ëë% &
.
ëë& '
Book
ëë' +
.
ëë+ ,

AuthorName
ëë, 6
,
ëë6 7
PricePerUnit
íí $
=
íí% &
x
íí' (
.
íí( )
Book
íí) -
.
íí- .
Price
íí. 3
,
íí3 4
Quantity
ìì  
=
ìì! "
x
ìì# $
.
ìì$ %
Quantity
ìì% -
,
ìì- .

TotalPrice
îî "
=
îî# $
x
îî% &
.
îî& '
Quantity
îî' /
*
îî0 1
x
îî2 3
.
îî3 4
Book
îî4 8
.
îî8 9
Price
îî9 >
,
îî> ?
}
ïï 
)
ïï 
.
ññ 
ToListAsync
ññ  
(
ññ  !
)
ññ! "
;
ññ" #
if
òò 
(
òò 
	cartItems
òò 
.
òò 
Count
òò #
>
òò$ %
$num
òò& '
)
òò' (
{
ôô 
var
öö 
serializedItems
öö '
=
öö( )
JsonSerializer
öö* 8
.
öö8 9
	Serialize
öö9 B
(
ööB C
	cartItems
ööC L
)
ööL M
;
ööM N
await
õõ 
_redisDatabase
õõ (
.
õõ( )
StringSetAsync
õõ) 7
(
õõ7 8
cacheKey
õõ8 @
,
õõ@ A
serializedItems
õõB Q
,
õõQ R
TimeSpan
õõS [
.
õõ[ \
FromMinutes
õõ\ g
(
õõg h
$num
õõh j
)
õõj k
)
õõk l
;
õõl m
_logger
úú 
.
úú 
LogInformation
úú *
(
úú* +
$str
úú+ @
)
úú@ A
;
úúA B
}
ùù 
else
ûû 
{
üü 
_logger
†† 
.
†† 
LogInformation
†† *
(
††* +
$str
††+ L
)
††L M
;
††M N
}
°° 
}
¢¢ 
catch
££ 
(
££ 
	Exception
££ 
ex
££ 
)
££  
{
§§ 
_logger
•• 
.
•• 
LogError
••  
(
••  !
ex
••! #
,
••# $
$str
••% N
)
••N O
;
••O P
}
¶¶ 
}
ßß 	
}
©© 
}™™ ˜Ä
:D:\BridgeLabz\BookStore\RepoLayer\Service\AddressImplRL.cs
	namespace 	
RepositoryLayer
 
. 
Service !
{ 
public 

class 
AddressImplRL 
:  

IAddressRL! +
{ 
private 
readonly 
UserContext $
_userContext% 1
;1 2
private 
readonly 
ILogger  
<  !
AddressImplRL! .
>. /
_logger0 7
;7 8
private 
readonly 
	IDatabase "
_redisDatabase# 1
;1 2
public 
AddressImplRL 
( 
UserContext (
userContext) 4
,4 5
ILogger6 =
<= >
AddressImplRL> K
>K L
loggerM S
,S T"
IConnectionMultiplexerU k
redisl q
)q r
{ 	
_userContext 
= 
userContext &
;& '
_logger 
= 
logger 
; 
_redisDatabase 
= 
redis "
." #
GetDatabase# .
(. /
)/ 0
;0 1
}   	
public"" 
async"" 
Task"" 
<"" 
ResponseDTO"" %
<""% &
string""& ,
>"", -
>""- .
AddAddressAsync""/ >
(""> ?
UserAddressReqDTO""? P
request""Q X
,""X Y
int""Z ]
userId""^ d
)""d e
{## 	
try$$ 
{%% 
_logger&& 
.&& 
LogInformation&& &
(&&& '
$str&&' R
)&&R S
;&&S T
var'' 
existingAddress'' #
=''$ %
await''& +
_userContext'', 8
.''8 9
	Addresses''9 B
.''B C
FirstOrDefaultAsync''C V
(''V W
x''W X
=>''Y [
x''\ ]
.''] ^
Type''^ b
==''c e
request''f m
.''m n
Type''n r
&&''s u
x''v w
.''w x
UserId''x ~
==	'' Å
userId
''Ç à
)
''à â
;
''â ä
if(( 
((( 
existingAddress(( #
!=(($ &
null((' +
)((+ ,
{)) 
_logger** 
.** 

LogWarning** &
(**& '
$str**' Y
)**Y Z
;**Z [
return++ 
new++ 
ResponseDTO++ *
<++* +
string+++ 1
>++1 2
{,, 
Success-- 
=--  !
false--" '
,--' (
Message.. 
=..  !
$str.." G
}// 
;// 
}00 
var11 
address11 
=11 
new11 !
AddressEntity11" /
{22 
Address33 
=33 
request33 %
.33% &
Address33& -
,33- .
City44 
=44 
request44 "
.44" #
City44# '
,44' (
State55 
=55 
request55 #
.55# $
State55$ )
,55) *
Type66 
=66 
request66 "
.66" #
Type66# '
,66' (
UserId77 
=77 
userId77 #
,77# $
Name88 
=88 
request88 "
.88" #
Name88# '
,88' (
MobileNumber99  
=99! "
request99# *
.99* +
MobileNumber99+ 7
}:: 
;:: 
await;; 
_userContext;; "
.;;" #
	Addresses;;# ,
.;;, -
AddAsync;;- 5
(;;5 6
address;;6 =
);;= >
;;;> ?
await<< 
_userContext<< "
.<<" #
SaveChangesAsync<<# 3
(<<3 4
)<<4 5
;<<5 6
_logger== 
.== 
LogInformation== &
(==& '
$str==' S
)==S T
;==T U
return>> 
new>> 
ResponseDTO>> &
<>>& '
string>>' -
>>>- .
{?? 
Success@@ 
=@@ 
true@@ "
,@@" #
MessageAA 
=AA 
$strAA :
}BB 
;BB 
}CC 
catchDD 
(DD 
	ExceptionDD 
exDD 
)DD  
{EE 
_loggerFF 
.FF 
LogErrorFF  
(FF  !
exFF! #
,FF# $
$strFF% ;
)FF; <
;FF< =
returnGG 
newGG 
ResponseDTOGG &
<GG& '
stringGG' -
>GG- .
{HH 
SuccessII 
=II 
falseII #
,II# $
MessageJJ 
=JJ 
$strJJ 4
}KK 
;KK 
}LL 
}NN 	
publicOO 
asyncOO 
TaskOO 
<OO 
ResponseDTOOO %
<OO% &
stringOO& ,
>OO, -
>OO- .
UpdateAddressAsyncOO/ A
(OOA B
UserAddressReqDTOOOB S
requestOOT [
,OO[ \
intOO\ _
	addressIdOO` i
,OOi j
intOOk n
userIdOOo u
)OOu v
{PP 	
tryQQ 
{RR 
_loggerSS 
.SS 
LogInformationSS &
(SS& '
$strSS' U
)SSU V
;SSV W
varTT 
existingAddressTT #
=TT$ %
awaitTT& +
_userContextTT, 8
.TT8 9
	AddressesTT9 B
.TTB C
FirstOrDefaultAsyncTTC V
(TTV W
xTTW X
=>TTY [
xTT\ ]
.TT] ^
	AddressIdTT^ g
==TTh j
	addressIdTTk t
&&TTu w
xTTx y
.TTy z
UserId	TTz Ä
==
TTÅ É
userId
TTÑ ä
)
TTä ã
;
TTã å
ifUU 
(UU 
existingAddressUU #
==UU$ &
nullUU' +
)UU+ ,
{VV 
_loggerWW 
.WW 

LogWarningWW &
(WW& '
$strWW' G
)WWG H
;WWH I
returnXX 
newXX 
ResponseDTOXX *
<XX* +
stringXX+ 1
>XX1 2
{YY 
SuccessZZ 
=ZZ  !
falseZZ" '
,ZZ' (
Message[[ 
=[[  !
$str[[" 5
}\\ 
;\\ 
}]] 
existingAddress^^ 
.^^  
Address^^  '
=^^( )
request^^* 1
.^^1 2
Address^^2 9
;^^9 :
existingAddress__ 
.__  
City__  $
=__% &
request__' .
.__. /
City__/ 3
;__3 4
existingAddress`` 
.``  
State``  %
=``& '
request``( /
.``/ 0
State``0 5
;``5 6
existingAddressaa 
.aa  
Typeaa  $
=aa% &
requestaa' .
.aa. /
Typeaa/ 3
;aa3 4
existingAddressbb 
.bb  
Namebb  $
=bb% &
requestbb' .
.bb. /
Namebb/ 3
;bb3 4
existingAddresscc 
.cc  
MobileNumbercc  ,
=cc- .
requestcc/ 6
.cc6 7
MobileNumbercc7 C
;ccC D
awaitdd 
_userContextdd "
.dd" #
SaveChangesAsyncdd# 3
(dd3 4
)dd4 5
;dd5 6
_loggeree 
.ee 
LogInformationee &
(ee& '
$stree' U
)eeU V
;eeV W
returnff 
newff 
ResponseDTOff &
<ff& '
stringff' -
>ff- .
{gg 
Successhh 
=hh 
truehh "
,hh" #
Messageii 
=ii 
$strii <
}jj 
;jj 
}kk 
catchll 
(ll 
	Exceptionll 
exll 
)ll  
{mm 
_loggernn 
.nn 
LogErrornn  
(nn  !
exnn! #
,nn# $
$strnn% =
)nn= >
;nn> ?
returnoo 
newoo 
ResponseDTOoo &
<oo& '
stringoo' -
>oo- .
{pp 
Successqq 
=qq 
falseqq #
,qq# $
Messagerr 
=rr 
$strrr 6
}ss 
;ss 
}tt 
}uu 	
publicvv 
asyncvv 
Taskvv 
<vv 
ResponseDTOvv %
<vv% &
Listvv& *
<vv* +
AddressEntityvv+ 8
>vv8 9
>vv9 :
>vv: ; 
GetAllAddressesAsyncvv< P
(vvP Q
intvvQ T
userIdvvU [
)vv[ \
{ww 	
tryxx 
{yy 
stringzz 
cacheKeyzz 
=zz  !
$"zz" $
$strzz$ ,
{zz, -
userIdzz- 3
}zz3 4
"zz4 5
;zz5 6
var{{ 
cachedAddresses{{ #
={{$ %
await{{& +
_redisDatabase{{, :
.{{: ;
StringGetAsync{{; I
({{I J
cacheKey{{J R
){{R S
;{{S T
if|| 
(|| 
cachedAddresses|| #
.||# $
HasValue||$ ,
)||, -
{}} 
var~~ 
	addresses~~ !
=~~" #
JsonSerializer~~$ 2
.~~2 3
Deserialize~~3 >
<~~> ?
List~~? C
<~~C D
AddressEntity~~D Q
>~~Q R
>~~R S
(~~S T
cachedAddresses~~T c
)~~c d
;~~d e
return 
new 
ResponseDTO *
<* +
List+ /
</ 0
AddressEntity0 =
>= >
>> ?
{
ÄÄ 
Success
ÅÅ 
=
ÅÅ  !
true
ÅÅ" &
,
ÅÅ& '
Message
ÇÇ 
=
ÇÇ  !
$str
ÇÇ" B
,
ÇÇB C
Data
ÉÉ 
=
ÉÉ 
	addresses
ÉÉ (
}
ÑÑ 
;
ÑÑ 
}
ÖÖ 
else
ÜÜ 
{
áá 
var
àà 
	addresses
àà !
=
àà" #
await
àà$ )
_userContext
àà* 6
.
àà6 7
	Addresses
àà7 @
.
àà@ A
Where
ààA F
(
ààF G
x
ààG H
=>
ààI K
x
ààL M
.
ààM N
UserId
ààN T
==
ààU W
userId
ààX ^
)
àà^ _
.
àà_ `
ToListAsync
àà` k
(
ààk l
)
ààl m
;
ààm n
await
ââ #
CacheAllUserAddresses
ââ /
(
ââ/ 0
userId
ââ0 6
)
ââ6 7
;
ââ7 8
return
ää 
new
ää 
ResponseDTO
ää *
<
ää* +
List
ää+ /
<
ää/ 0
AddressEntity
ää0 =
>
ää= >
>
ää> ?
{
ãã 
Success
åå 
=
åå  !
true
åå" &
,
åå& '
Message
çç 
=
çç  !
$str
çç" E
,
ççE F
Data
éé 
=
éé 
	addresses
éé (
}
èè 
;
èè 
}
êê 
}
ëë 
catch
íí 
(
íí 
	Exception
íí 
ex
íí 
)
íí  
{
ìì 
_logger
îî 
.
îî 
LogError
îî  
(
îî  !
ex
îî! #
,
îî# $
$str
îî% A
)
îîA B
;
îîB C
return
ïï 
new
ïï 
ResponseDTO
ïï &
<
ïï& '
List
ïï' +
<
ïï+ ,
AddressEntity
ïï, 9
>
ïï9 :
>
ïï: ;
{
ññ 
Success
óó 
=
óó 
false
óó #
,
óó# $
Message
òò 
=
òò 
$str
òò :
}
ôô 
;
ôô 
}
öö 
}
õõ 	
public
úú 
async
úú 
Task
úú 
<
úú 
ResponseDTO
úú %
<
úú% &
string
úú& ,
>
úú, -
>
úú- . 
DeleteAddressAsync
úú/ A
(
úúA B
int
úúB E
	addressId
úúF O
,
úúO P
int
úúQ T
userId
úúU [
)
úú[ \
{
ùù 	
try
ûû 
{
üü 
_logger
†† 
.
†† 
LogInformation
†† &
(
††& '
$str
††' W
)
††W X
;
††X Y
var
°° 
existingAddress
°° #
=
°°$ %
await
°°& +
_userContext
°°, 8
.
°°8 9
	Addresses
°°9 B
.
°°B C!
FirstOrDefaultAsync
°°C V
(
°°V W
x
°°W X
=>
°°Y [
x
°°\ ]
.
°°] ^
	AddressId
°°^ g
==
°°h j
	addressId
°°k t
&&
°°u w
x
°°x y
.
°°y z
UserId°°z Ä
==°°Å É
userId°°Ñ ä
)°°ä ã
;°°ã å
if
¢¢ 
(
¢¢ 
existingAddress
¢¢ #
==
¢¢$ &
null
¢¢' +
)
¢¢+ ,
{
££ 
_logger
§§ 
.
§§ 

LogWarning
§§ &
(
§§& '
$str
§§' G
)
§§G H
;
§§H I
return
•• 
new
•• 
ResponseDTO
•• *
<
••* +
string
••+ 1
>
••1 2
{
¶¶ 
Success
ßß 
=
ßß  !
false
ßß" '
,
ßß' (
Message
®® 
=
®®  !
$str
®®" 5
}
©© 
;
©© 
}
™™ 
_userContext
´´ 
.
´´ 
	Addresses
´´ &
.
´´& '
Remove
´´' -
(
´´- .
existingAddress
´´. =
)
´´= >
;
´´> ?
await
¨¨ 
_userContext
¨¨ "
.
¨¨" #
SaveChangesAsync
¨¨# 3
(
¨¨3 4
)
¨¨4 5
;
¨¨5 6
await
≠≠ #
CacheAllUserAddresses
≠≠ +
(
≠≠+ ,
userId
≠≠, 2
)
≠≠2 3
;
≠≠3 4
_logger
ÆÆ 
.
ÆÆ 
LogInformation
ÆÆ &
(
ÆÆ& '
$str
ÆÆ' W
)
ÆÆW X
;
ÆÆX Y
return
ØØ 
new
ØØ 
ResponseDTO
ØØ &
<
ØØ& '
string
ØØ' -
>
ØØ- .
{
∞∞ 
Success
±± 
=
±± 
true
±± "
,
±±" #
Message
≤≤ 
=
≤≤ 
$str
≤≤ <
}
≥≥ 
;
≥≥ 
}
¥¥ 
catch
µµ 
(
µµ 
	Exception
µµ 
ex
µµ 
)
µµ  
{
∂∂ 
_logger
∑∑ 
.
∑∑ 
LogError
∑∑  
(
∑∑  !
ex
∑∑! #
,
∑∑# $
$str
∑∑% =
)
∑∑= >
;
∑∑> ?
return
∏∏ 
new
∏∏ 
ResponseDTO
∏∏ &
<
∏∏& '
string
∏∏' -
>
∏∏- .
{
ππ 
Success
∫∫ 
=
∫∫ 
false
∫∫ #
,
∫∫# $
Message
ªª 
=
ªª 
$str
ªª 6
}
ºº 
;
ºº 
}
ΩΩ 
}
ææ 	
private
øø 
async
øø 
Task
øø #
CacheAllUserAddresses
øø 0
(
øø0 1
int
øø1 4
userId
øø5 ;
)
øø; <
{
¿¿ 	
var
¡¡ 
	Addresses
¡¡ 
=
¡¡ 
await
¡¡ !
_userContext
¡¡" .
.
¡¡. /
	Addresses
¡¡/ 8
.
¡¡8 9
ToListAsync
¡¡9 D
(
¡¡D E
)
¡¡E F
;
¡¡F G
string
¬¬ 
cacheKey
¬¬ 
=
¬¬ 
$"
¬¬  
$str
¬¬  (
{
¬¬( )
userId
¬¬) /
}
¬¬/ 0
"
¬¬0 1
;
¬¬1 2
var
√√ !
serializedAddresses
√√ #
=
√√$ %
JsonSerializer
√√& 4
.
√√4 5
	Serialize
√√5 >
(
√√> ?
	Addresses
√√? H
)
√√H I
;
√√I J
await
ƒƒ 
_redisDatabase
ƒƒ  
.
ƒƒ  !
StringSetAsync
ƒƒ! /
(
ƒƒ/ 0
cacheKey
ƒƒ0 8
,
ƒƒ8 9!
serializedAddresses
ƒƒ: M
,
ƒƒM N
TimeSpan
ƒƒO W
.
ƒƒW X
FromMinutes
ƒƒX c
(
ƒƒc d
$num
ƒƒd f
)
ƒƒf g
)
ƒƒg h
;
ƒƒh i
}
≈≈ 	
}
∆∆ 
}«« ‹˘
7D:\BridgeLabz\BookStore\RepoLayer\Service\UserImplRL.cs
	namespace 	
RepositoryLayer
 
. 
Service !
{ 
public 

class 

UserImplRl 
: 
IUserRL %
{ 
private 
readonly 
UserContext $
_userContext% 1
;1 2
private 
readonly 
	IDatabase "
_redisDatabase# 1
;1 2
private 
readonly 
PasswordHasher '
_passwordHasher( 7
;7 8
private 
readonly 
AuthService $
_authService% 1
;1 2
private 
readonly 
ILogger  
<  !

UserImplRl! +
>+ ,
_logger- 4
;4 5
private 
readonly 
	Publisher "

_publisher# -
;- .
public 

UserImplRl 
( 
UserContext %
userContext& 1
,1 2"
IConnectionMultiplexer3 I!
connectionMultiplexerJ _
,_ `
PasswordHashera o
passwordHasherp ~
,~ 
AuthService
Ä ã
authService
å ó
,
ó ò
ILogger
ô †
<
† °

UserImplRl
° ´
>
´ ¨
_logger
≠ ¥
,
¥ µ
	Publisher
µ æ
	publisher
ø »
)
» …
{   	
_userContext!! 
=!! 
userContext!! &
;!!& '
_redisDatabase"" 
="" !
connectionMultiplexer"" 2
.""2 3
GetDatabase""3 >
(""> ?
)""? @
;""@ A
_passwordHasher## 
=## 
passwordHasher## ,
;##, -
_authService$$ 
=$$ 
authService$$ &
;$$& '
this%% 
.%% 
_logger%% 
=%% 
_logger%% "
;%%" #

_publisher&& 
=&& 
	publisher&& "
;&&" #
}'' 	
public)) 
async)) 
Task)) 
<)) 
ResponseDTO)) %
<))% &
string))& ,
>)), -
>))- .
RegisterUserAsync))/ @
())@ A

RegUserDTO))A K
request))L S
)))S T
{** 	
using++ 
var++ 
transaction++ !
=++" #
_userContext++$ 0
.++0 1
Database++1 9
.++9 :
BeginTransaction++: J
(++J K
)++K L
;++L M
try,, 
{-- 
_logger.. 
... 
LogInformation.. &
(..& '
$str..' Z
,..Z [
request..\ c
...c d
Email..d i
)..i j
;..j k
var// 
user// 
=// 
_userContext// '
.//' (
Users//( -
.//- .
FirstOrDefault//. <
(//< =
x//= >
=>//? A
x//B C
.//C D
Email//D I
==//J L
request//M T
.//T U
Email//U Z
)//Z [
;//[ \
if00 
(00 
user00 
!=00 
null00  
)00  !
{11 
_logger22 
.22 

LogWarning22 &
(22& '
$str22' P
,22P Q
request22R Y
.22Y Z
Email22Z _
)22_ `
;22` a
return33 
new33 
ResponseDTO33 *
<33* +
string33+ 1
>331 2
{44 
Success55 
=55  !
false55" '
,55' (
Message66 
=66  !
$str66" 7
,667 8
Data77 
=77 
null77 #
}88 
;88 
}99 
var:: 
	hashedPwd:: 
=:: 
await::  %
_passwordHasher::& 5
.::5 6
HashPasswordAsync::6 G
(::G H
request::H O
.::O P
Password::P X
)::X Y
;::Y Z
var;; 
newUser;; 
=;; 
new;; !

UserEntity;;" ,
{<< 
	FirstName== 
=== 
request==  '
.==' (
	FirstName==( 1
,==1 2
LastName>> 
=>> 
request>> &
.>>& '
LastName>>' /
,>>/ 0
Email?? 
=?? 
request?? #
.??# $
Email??$ )
,??) *
Password@@ 
=@@ 
	hashedPwd@@ (
,@@( )
}AA 
;AA 
_loggerBB 
.BB 
LogInformationBB &
(BB& '
$strBB' X
,BBX Y
requestBBZ a
.BBa b
EmailBBb g
)BBg h
;BBh i
awaitCC #
InvalidateAllUsersCacheCC -
(CC- .
)CC. /
;CC/ 0
awaitDD 
_userContextDD "
.DD" #
UsersDD# (
.DD( )
AddAsyncDD) 1
(DD1 2
newUserDD2 9
)DD9 :
;DD: ;
awaitEE 
_userContextEE "
.EE" #
SaveChangesAsyncEE# 3
(EE3 4
)EE4 5
;EE5 6
awaitFF 
CacheSingleUserFF %
(FF% &
newUserFF& -
.FF- .
UserIdFF. 4
)FF4 5
;FF5 6
awaitGG 
CacheAllUsersGG #
(GG# $
)GG$ %
;GG% &
awaitHH 
transactionHH !
.HH! "
CommitAsyncHH" -
(HH- .
)HH. /
;HH/ 0
returnJJ 
newJJ 
ResponseDTOJJ &
<JJ& '
stringJJ' -
>JJ- .
{KK 
SuccessLL 
=LL 
trueLL "
,LL" #
MessageMM 
=MM 
$strMM <
}NN 
;NN 
}OO 
catchPP 
(PP 
	ExceptionPP 
exPP 
)PP  
{QQ 
_loggerRR 
.RR 
LogErrorRR  
(RR  !
$strRR! L
,RRL M
exRRN P
.RRP Q
MessageRRQ X
)RRX Y
;RRY Z
awaitSS 
transactionSS !
.SS! "
RollbackAsyncSS" /
(SS/ 0
)SS0 1
;SS1 2
returnTT 
newTT 
ResponseDTOTT &
<TT& '
stringTT' -
>TT- .
{UU 
SuccessVV 
=VV 
falseVV #
,VV# $
MessageWW 
=WW 
exWW  
.WW  !
MessageWW! (
,WW( )
DataXX 
=XX 
nullXX 
}YY 
;YY 
}ZZ 
}[[ 	
public]] 
async]] 
Task]] 
<]] 
ResponseDTO]] %
<]]% &
LoginResponseDTO]]& 6
>]]6 7
>]]7 8

LoginAsync]]9 C
(]]C D
string]]D J
email]]K P
,]]P Q
string]]R X
password]]Y a
)]]a b
{^^ 	
using__ 
var__ 
transaction__ !
=__" #
_userContext__$ 0
.__0 1
Database__1 9
.__9 :
BeginTransaction__: J
(__J K
)__K L
;__L M
try`` 
{aa 
_loggerbb 
.bb 
LogInformationbb &
(bb& '
$strbb' R
,bbR S
emailbbT Y
)bbY Z
;bbZ [
varcc 
usercc 
=cc 
awaitcc  
_userContextcc! -
.cc- .
Userscc. 3
.cc3 4
FirstOrDefaultAsynccc4 G
(ccG H
xccH I
=>ccJ L
xccM N
.ccN O
EmailccO T
==ccU W
emailccX ]
)cc] ^
;cc^ _
ifdd 
(dd 
userdd 
==dd 
nulldd  
)dd  !
{ee 
returnff 
newff 
ResponseDTOff *
<ff* +
LoginResponseDTOff+ ;
>ff; <
{gg 
Successhh 
=hh  !
falsehh" '
,hh' (
Messageii 
=ii  !
$strii" 2
,ii2 3
Datajj 
=jj 
nulljj #
}kk 
;kk 
}ll 
varmm 
isPasswordValidmm #
=mm$ %
awaitmm& +
_passwordHashermm, ;
.mm; <
VerifyPasswordAsyncmm< O
(mmO P
passwordmmP X
,mmX Y
usermmZ ^
.mm^ _
Passwordmm_ g
)mmg h
;mmh i
ifnn 
(nn 
!nn 
isPasswordValidnn $
)nn$ %
{oo 
_loggerpp 
.pp 

LogWarningpp &
(pp& '
$strpp' T
,ppT U
emailppV [
)pp[ \
;pp\ ]
returnqq 
newqq 
ResponseDTOqq *
<qq* +
LoginResponseDTOqq+ ;
>qq; <
{rr 
Successss 
=ss  !
falsess" '
,ss' (
Messagett 
=tt  !
$strtt" 4
,tt4 5
}uu 
;uu 
}vv 
_loggerww 
.ww 
LogInformationww &
(ww& '
$strww' Q
,wwQ R
emailwwS X
)wwX Y
;wwY Z
varxx 
tokenxx 
=xx 
_authServicexx (
.xx( )
GenerateJwtTokenxx) 9
(xx9 :
userxx: >
)xx> ?
;xx? @
awaityy 
CacheSingleUseryy %
(yy% &
useryy& *
.yy* +
UserIdyy+ 1
)yy1 2
;yy2 3
awaitzz 
transactionzz !
.zz! "
CommitAsynczz" -
(zz- .
)zz. /
;zz/ 0
return{{ 
new{{ 
ResponseDTO{{ &
<{{& '
LoginResponseDTO{{' 7
>{{7 8
{|| 
Success}} 
=}} 
true}} "
,}}" #
Message~~ 
=~~ 
$str~~ 0
,~~0 1
Data 
= 
new 
LoginResponseDTO /
{
ÄÄ 
Email
ÅÅ 
=
ÅÅ 
user
ÅÅ  $
.
ÅÅ$ %
Email
ÅÅ% *
,
ÅÅ* +
Token
ÇÇ 
=
ÇÇ 
token
ÇÇ  %
}
ÉÉ 
}
ÑÑ 
;
ÑÑ 
}
ÖÖ 
catch
ÜÜ 
(
ÜÜ 
	Exception
ÜÜ 
ex
ÜÜ 
)
ÜÜ  
{
áá 
await
àà 
transaction
àà !
.
àà! "
RollbackAsync
àà" /
(
àà/ 0
)
àà0 1
;
àà1 2
return
ââ 
new
ââ 
ResponseDTO
ââ &
<
ââ& '
LoginResponseDTO
ââ' 7
>
ââ7 8
{
ää 
Success
ãã 
=
ãã 
false
ãã #
,
ãã# $
Message
åå 
=
åå 
ex
åå  
.
åå  !
Message
åå! (
,
åå( )
Data
çç 
=
çç 
null
çç 
}
éé 
;
éé 
}
èè 
}
êê 	
public
íí 
async
íí 
Task
íí 
<
íí 
ResponseDTO
íí %
<
íí% &
List
íí& *
<
íí* +

UserEntity
íí+ 5
>
íí5 6
>
íí6 7
>
íí7 8
GetAllUsersAsync
íí9 I
(
ííI J
)
ííJ K
{
ìì 	
try
îî 
{
ïï 
_logger
ññ 
.
ññ 
LogInformation
ññ &
(
ññ& '
$str
ññ' I
)
ññI J
;
ññJ K
var
óó 
userKey
óó 
=
óó 
$str
óó (
;
óó( )
var
òò 
cachedUsers
òò 
=
òò  !
await
òò" '
_redisDatabase
òò( 6
.
òò6 7
StringGetAsync
òò7 E
(
òòE F
userKey
òòF M
)
òòM N
;
òòN O
if
ôô 
(
ôô 
cachedUsers
ôô 
.
ôô  
HasValue
ôô  (
)
ôô( )
{
öö 
_logger
õõ 
.
õõ 
LogInformation
õõ *
(
õõ* +
$str
õõ+ G
)
õõG H
;
õõH I
var
úú 
users
úú 
=
úú 
JsonSerializer
úú  .
.
úú. /
Deserialize
úú/ :
<
úú: ;
List
úú; ?
<
úú? @

UserEntity
úú@ J
>
úúJ K
>
úúK L
(
úúL M
cachedUsers
úúM X
)
úúX Y
;
úúY Z
if
ùù 
(
ùù 
users
ùù 
.
ùù 
Count
ùù #
>
ùù$ %
$num
ùù& '
)
ùù' (
{
ûû 
return
üü 
new
üü "
ResponseDTO
üü# .
<
üü. /
List
üü/ 3
<
üü3 4

UserEntity
üü4 >
>
üü> ?
>
üü? @
{
†† 
Success
°° #
=
°°$ %
true
°°& *
,
°°* +
Message
¢¢ #
=
¢¢$ %
$str
¢¢& B
,
¢¢B C
Data
££  
=
££! "
users
££# (
}
§§ 
;
§§ 
}
•• 
else
¶¶ 
{
ßß 
_logger
®® 
.
®®  

LogWarning
®®  *
(
®®* +
$str
®®+ D
)
®®D E
;
®®E F
return
©© 
new
©© "
ResponseDTO
©©# .
<
©©. /
List
©©/ 3
<
©©3 4

UserEntity
©©4 >
>
©©> ?
>
©©? @
{
™™ 
Success
´´ #
=
´´$ %
false
´´& +
,
´´+ ,
Message
¨¨ #
=
¨¨$ %
$str
¨¨& 6
,
¨¨6 7
Data
≠≠  
=
≠≠! "
null
≠≠# '
}
ÆÆ 
;
ÆÆ 
}
ØØ 
}
∞∞ 
else
±± 
{
≤≤ 
_logger
≥≥ 
.
≥≥ 
LogInformation
≥≥ *
(
≥≥* +
$str
≥≥+ _
)
≥≥_ `
;
≥≥` a
var
¥¥ 
users
¥¥ 
=
¥¥ 
await
¥¥  %
_userContext
¥¥& 2
.
¥¥2 3
Users
¥¥3 8
.
¥¥8 9
ToListAsync
¥¥9 D
(
¥¥D E
)
¥¥E F
;
¥¥F G
await
µµ 
CacheAllUsers
µµ '
(
µµ' (
)
µµ( )
;
µµ) *
if
∂∂ 
(
∂∂ 
users
∂∂ 
.
∂∂ 
Count
∂∂ #
>
∂∂$ %
$num
∂∂& '
)
∂∂' (
{
∑∑ 
return
∏∏ 
new
∏∏ "
ResponseDTO
∏∏# .
<
∏∏. /
List
∏∏/ 3
<
∏∏3 4

UserEntity
∏∏4 >
>
∏∏> ?
>
∏∏? @
{
ππ 
Success
∫∫ #
=
∫∫$ %
true
∫∫& *
,
∫∫* +
Message
ªª #
=
ªª$ %
$str
ªª& E
,
ªªE F
Data
ºº  
=
ºº! "
users
ºº# (
}
ΩΩ 
;
ΩΩ 
}
ææ 
else
øø 
{
¿¿ 
_logger
¡¡ 
.
¡¡  

LogWarning
¡¡  *
(
¡¡* +
$str
¡¡+ ;
)
¡¡; <
;
¡¡< =
return
¬¬ 
new
¬¬ "
ResponseDTO
¬¬# .
<
¬¬. /
List
¬¬/ 3
<
¬¬3 4

UserEntity
¬¬4 >
>
¬¬> ?
>
¬¬? @
{
√√ 
Success
ƒƒ #
=
ƒƒ$ %
false
ƒƒ& +
,
ƒƒ+ ,
Message
≈≈ #
=
≈≈$ %
$str
≈≈& 6
,
≈≈6 7
Data
∆∆  
=
∆∆! "
null
∆∆# '
}
«« 
;
«« 
}
»» 
}
…… 
}
   
catch
ÀÀ 
(
ÀÀ 
	Exception
ÀÀ 
ex
ÀÀ 
)
ÀÀ  
{
ÃÃ 
return
ÕÕ 
new
ÕÕ 
ResponseDTO
ÕÕ &
<
ÕÕ& '
List
ÕÕ' +
<
ÕÕ+ ,

UserEntity
ÕÕ, 6
>
ÕÕ6 7
>
ÕÕ7 8
{
ŒŒ 
Success
œœ 
=
œœ 
false
œœ #
,
œœ# $
Message
–– 
=
–– 
ex
––  
.
––  !
Message
––! (
,
––( )
Data
—— 
=
—— 
null
—— 
}
““ 
;
““ 
}
”” 
}
‘‘ 	
public
’’ 
async
’’ 
Task
’’ 
<
’’ 
ResponseDTO
’’ %
<
’’% &
string
’’& ,
>
’’, -
>
’’- .
DeleteUserAsync
’’/ >
(
’’> ?
string
’’? E
email
’’F K
)
’’K L
{
÷÷ 	
using
◊◊ 
var
◊◊ 
transaction
◊◊ !
=
◊◊" #
_userContext
◊◊$ 0
.
◊◊0 1
Database
◊◊1 9
.
◊◊9 :
BeginTransaction
◊◊: J
(
◊◊J K
)
◊◊K L
;
◊◊L M
try
ÿÿ 
{
ŸŸ 
_logger
⁄⁄ 
.
⁄⁄ 
LogInformation
⁄⁄ &
(
⁄⁄& '
$str
⁄⁄' V
,
⁄⁄V W
email
⁄⁄X ]
)
⁄⁄] ^
;
⁄⁄^ _
var
€€ 
user
€€ 
=
€€ 
await
€€  
_userContext
€€! -
.
€€- .
Users
€€. 3
.
€€3 4!
FirstOrDefaultAsync
€€4 G
(
€€G H
x
€€H I
=>
€€J L
x
€€M N
.
€€N O
Email
€€O T
==
€€U W
email
€€X ]
)
€€] ^
;
€€^ _
if
‹‹ 
(
‹‹ 
user
‹‹ 
==
‹‹ 
null
‹‹  
)
‹‹  !
{
›› 
return
ﬁﬁ 
new
ﬁﬁ 
ResponseDTO
ﬁﬁ *
<
ﬁﬁ* +
string
ﬁﬁ+ 1
>
ﬁﬁ1 2
{
ﬂﬂ 
Success
‡‡ 
=
‡‡  !
false
‡‡" '
,
‡‡' (
Message
·· 
=
··  !
$str
··" 2
,
··2 3
Data
‚‚ 
=
‚‚ 
null
‚‚ #
}
„„ 
;
„„ 
}
‰‰ 
_userContext
ÂÂ 
.
ÂÂ 
Users
ÂÂ "
.
ÂÂ" #
Remove
ÂÂ# )
(
ÂÂ) *
user
ÂÂ* .
)
ÂÂ. /
;
ÂÂ/ 0
await
ÊÊ '
InvalidateSingleUserCache
ÊÊ /
(
ÊÊ/ 0
user
ÊÊ0 4
.
ÊÊ4 5
UserId
ÊÊ5 ;
)
ÊÊ; <
;
ÊÊ< =
await
ÁÁ %
InvalidateAllUsersCache
ÁÁ -
(
ÁÁ- .
)
ÁÁ. /
;
ÁÁ/ 0
await
ËË 
_userContext
ËË "
.
ËË" #
SaveChangesAsync
ËË# 3
(
ËË3 4
)
ËË4 5
;
ËË5 6
await
ÈÈ 
CacheAllUsers
ÈÈ #
(
ÈÈ# $
)
ÈÈ$ %
;
ÈÈ% &
await
ÍÍ 
transaction
ÍÍ !
.
ÍÍ! "
CommitAsync
ÍÍ" -
(
ÍÍ- .
)
ÍÍ. /
;
ÍÍ/ 0
_logger
ÎÎ 
.
ÎÎ 
LogInformation
ÎÎ &
(
ÎÎ& '
$str
ÎÎ' V
,
ÎÎV W
email
ÎÎX ]
)
ÎÎ] ^
;
ÎÎ^ _
return
ÏÏ 
new
ÏÏ 
ResponseDTO
ÏÏ &
<
ÏÏ& '
string
ÏÏ' -
>
ÏÏ- .
{
ÌÌ 
Success
ÓÓ 
=
ÓÓ 
true
ÓÓ "
,
ÓÓ" #
Message
ÔÔ 
=
ÔÔ 
$str
ÔÔ 9
}
 
;
 
}
ÒÒ 
catch
ÚÚ 
(
ÚÚ 
	Exception
ÚÚ 
ex
ÚÚ 
)
ÚÚ  
{
ÛÛ 
_logger
ÙÙ 
.
ÙÙ 
LogError
ÙÙ  
(
ÙÙ  !
$str
ÙÙ! H
,
ÙÙH I
ex
ÙÙJ L
.
ÙÙL M
Message
ÙÙM T
)
ÙÙT U
;
ÙÙU V
await
ıı 
transaction
ıı !
.
ıı! "
RollbackAsync
ıı" /
(
ıı/ 0
)
ıı0 1
;
ıı1 2
return
ˆˆ 
new
ˆˆ 
ResponseDTO
ˆˆ &
<
ˆˆ& '
string
ˆˆ' -
>
ˆˆ- .
{
˜˜ 
Success
¯¯ 
=
¯¯ 
false
¯¯ #
,
¯¯# $
Message
˘˘ 
=
˘˘ 
ex
˘˘  
.
˘˘  !
Message
˘˘! (
,
˘˘( )
Data
˙˙ 
=
˙˙ 
null
˙˙ 
}
˚˚ 
;
˚˚ 
}
¸¸ 
}
˝˝ 	
public
ˇˇ 
async
ˇˇ 
Task
ˇˇ 
<
ˇˇ 
ResponseDTO
ˇˇ %
<
ˇˇ% &
string
ˇˇ& ,
>
ˇˇ, -
>
ˇˇ- .!
ForgotPasswordAsync
ˇˇ/ B
(
ˇˇB C
string
ˇˇC I
email
ˇˇJ O
)
ˇˇO P
{
ÄÄ 	
try
ÅÅ 
{
ÇÇ 
_logger
ÉÉ 
.
ÉÉ 
LogInformation
ÉÉ &
(
ÉÉ& '
$"
ÉÉ' )
$str
ÉÉ) H
{
ÉÉH I
email
ÉÉI N
}
ÉÉN O
"
ÉÉO P
)
ÉÉP Q
;
ÉÉQ R
var
ÑÑ 
user
ÑÑ 
=
ÑÑ 
await
ÑÑ 
_userContext
ÑÑ  ,
.
ÑÑ, -
Users
ÑÑ- 2
.
ÑÑ2 3!
FirstOrDefaultAsync
ÑÑ3 F
(
ÑÑF G
u
ÑÑG H
=>
ÑÑI K
u
ÑÑL M
.
ÑÑM N
Email
ÑÑN S
==
ÑÑT V
email
ÑÑW \
)
ÑÑ\ ]
;
ÑÑ] ^
if
ÖÖ 
(
ÖÖ 
user
ÖÖ 
!=
ÖÖ 
null
ÖÖ  
)
ÖÖ  !
{
ÜÜ 
var
áá 
token
áá 
=
áá 
_authService
áá  ,
.
áá, -
GenerateJwtToken
áá- =
(
áá= >
user
áá> B
)
ááB C
;
ááC D
var
ââ 
emailMessage
ââ $
=
ââ% &
new
ââ' *
EmailMessageDTO
ââ+ :
{
ää 
Subject
ãã 
=
ãã  !
$str
ãã" 8
,
ãã8 9
Body
åå 
=
åå 
$"
åå !
$str
åå! [
{
åå[ \
token
åå\ a
}
ååa b
$strååb †
"åå† °
,åå° ¢
Email
çç 
=
çç 
email
çç  %
}
éé 
;
éé 
var
èè 
msg
èè 
=
èè 
JsonSerializer
èè ,
.
èè, -
	Serialize
èè- 6
(
èè6 7
emailMessage
èè7 C
)
èèC D
;
èèD E

_publisher
êê 
.
êê 
PublishToQueue
êê -
(
êê- .
$str
êê. :
,
êê: ;
msg
êê< ?
)
êê? @
;
êê@ A
_logger
íí 
.
íí 
LogInformation
íí *
(
íí* +
$"
íí+ -
$str
íí- \
{
íí\ ]
user
íí] a
}
íía b
"
ííb c
)
ííc d
;
ííd e
return
ìì 
new
ìì 
ResponseDTO
ìì *
<
ìì* +
string
ìì+ 1
>
ìì1 2
{
îî 
Success
ïï 
=
ïï  !
true
ïï" &
,
ïï& '
Message
ññ 
=
ññ  !
$str
ññ" P
}
óó 
;
óó 
}
òò 
else
ôô 
{
öö 
_logger
õõ 
.
õõ 
LogInformation
õõ *
(
õõ* +
$"
õõ+ -
$str
õõ- k
{
õõk l
email
õõl q
}
õõq r
"
õõr s
)
õõs t
;
õõt u
return
úú 
new
úú 
ResponseDTO
úú *
<
úú* +
string
úú+ 1
>
úú1 2
{
ùù 
Success
ûû 
=
ûû  !
false
ûû" '
,
ûû' (
Message
üü 
=
üü  !
$str
üü" 1
}
†† 
;
†† 
}
°° 
}
££ 
catch
§§ 
(
§§ 
	Exception
§§ 
ex
§§ 
)
§§  
{
•• 
throw
¶¶ 
new
¶¶ 
	Exception
¶¶ #
(
¶¶# $
ex
¶¶$ &
.
¶¶& '
Message
¶¶' .
)
¶¶. /
;
¶¶/ 0
}
ßß 
}
®® 	
public
™™ 
async
™™ 
Task
™™ 
<
™™ 
ResponseDTO
™™ %
<
™™% &
string
™™& ,
>
™™, -
>
™™- . 
ResetPasswordAsync
™™/ A
(
™™A B
string
™™B H
email
™™I N
,
™™N O
string
™™P V
newPassword
™™W b
)
™™b c
{
´´ 	
using
¨¨ 
var
¨¨ 
transaction
¨¨ !
=
¨¨" #
_userContext
¨¨$ 0
.
¨¨0 1
Database
¨¨1 9
.
¨¨9 :
BeginTransaction
¨¨: J
(
¨¨J K
)
¨¨K L
;
¨¨L M
try
≠≠ 
{
ÆÆ 
_logger
ØØ 
.
ØØ 
LogInformation
ØØ &
(
ØØ& '
$str
ØØ' X
,
ØØX Y
email
ØØZ _
)
ØØ_ `
;
ØØ` a
var
∞∞ 
user
∞∞ 
=
∞∞ 
await
∞∞  
_userContext
∞∞! -
.
∞∞- .
Users
∞∞. 3
.
∞∞3 4!
FirstOrDefaultAsync
∞∞4 G
(
∞∞G H
x
∞∞H I
=>
∞∞J L
x
∞∞M N
.
∞∞N O
Email
∞∞O T
==
∞∞U W
email
∞∞X ]
)
∞∞] ^
;
∞∞^ _
if
±± 
(
±± 
user
±± 
==
±± 
null
±±  
)
±±  !
{
≤≤ 
return
≥≥ 
new
≥≥ 
ResponseDTO
≥≥ *
<
≥≥* +
string
≥≥+ 1
>
≥≥1 2
{
¥¥ 
Success
µµ 
=
µµ  !
false
µµ" '
,
µµ' (
Message
∂∂ 
=
∂∂  !
$str
∂∂" 2
,
∂∂2 3
Data
∑∑ 
=
∑∑ 
null
∑∑ #
}
∏∏ 
;
∏∏ 
}
ππ 
var
∫∫ 
	hashedPwd
∫∫ 
=
∫∫ 
await
∫∫  %
_passwordHasher
∫∫& 5
.
∫∫5 6
HashPasswordAsync
∫∫6 G
(
∫∫G H
newPassword
∫∫H S
)
∫∫S T
;
∫∫T U
user
ªª 
.
ªª 
Password
ªª 
=
ªª 
	hashedPwd
ªª  )
;
ªª) *
await
ºº '
InvalidateSingleUserCache
ºº /
(
ºº/ 0
user
ºº0 4
.
ºº4 5
UserId
ºº5 ;
)
ºº; <
;
ºº< =
await
ΩΩ 
_userContext
ΩΩ "
.
ΩΩ" #
SaveChangesAsync
ΩΩ# 3
(
ΩΩ3 4
)
ΩΩ4 5
;
ΩΩ5 6
await
ææ 
CacheSingleUser
ææ %
(
ææ% &
user
ææ& *
.
ææ* +
UserId
ææ+ 1
)
ææ1 2
;
ææ2 3
await
øø 
transaction
øø !
.
øø! "
CommitAsync
øø" -
(
øø- .
)
øø. /
;
øø/ 0
_logger
¿¿ 
.
¿¿ 
LogInformation
¿¿ &
(
¿¿& '
$str
¿¿' U
,
¿¿U V
email
¿¿W \
)
¿¿\ ]
;
¿¿] ^
return
¡¡ 
new
¡¡ 
ResponseDTO
¡¡ &
<
¡¡& '
string
¡¡' -
>
¡¡- .
{
¬¬ 
Success
√√ 
=
√√ 
true
√√ "
,
√√" #
Message
ƒƒ 
=
ƒƒ 
$str
ƒƒ ;
}
≈≈ 
;
≈≈ 
}
∆∆ 
catch
«« 
(
«« 
	Exception
«« 
ex
«« 
)
««  
{
»» 
_logger
…… 
.
…… 
LogError
……  
(
……  !
$str
……! I
,
……I J
ex
……K M
.
……M N
Message
……N U
)
……U V
;
……V W
await
   
transaction
   !
.
  ! "
RollbackAsync
  " /
(
  / 0
)
  0 1
;
  1 2
return
ÀÀ 
new
ÀÀ 
ResponseDTO
ÀÀ &
<
ÀÀ& '
string
ÀÀ' -
>
ÀÀ- .
{
ÃÃ 
Success
ÕÕ 
=
ÕÕ 
false
ÕÕ #
,
ÕÕ# $
Message
ŒŒ 
=
ŒŒ 
ex
ŒŒ  
.
ŒŒ  !
Message
ŒŒ! (
,
ŒŒ( )
Data
œœ 
=
œœ 
null
œœ 
}
–– 
;
–– 
}
—— 
}
““ 	
private
‘‘ 
async
‘‘ 
Task
‘‘ 
CacheAllUsers
‘‘ (
(
‘‘( )
)
‘‘) *
{
’’ 	
var
÷÷ 
users
÷÷ 
=
÷÷ 
await
÷÷ !
_userContext
÷÷" .
.
÷÷. /
Users
÷÷/ 4
.
÷÷4 5
ToListAsync
÷÷5 @
(
÷÷@ A
)
÷÷A B
;
÷÷B C
var
◊◊ 
userKey
◊◊ 
=
◊◊ 
$str
◊◊ (
;
◊◊( )
var
ÿÿ 
	userValue
ÿÿ 
=
ÿÿ 
JsonSerializer
ÿÿ  .
.
ÿÿ. /
	Serialize
ÿÿ/ 8
(
ÿÿ8 9
users
ÿÿ9 >
)
ÿÿ> ?
;
ÿÿ? @
var
ŸŸ 
timeout
ŸŸ 
=
ŸŸ 
TimeSpan
ŸŸ &
.
ŸŸ& '
FromMinutes
ŸŸ' 2
(
ŸŸ2 3
$num
ŸŸ3 5
)
ŸŸ5 6
;
ŸŸ6 7
await
⁄⁄ 
_redisDatabase
⁄⁄ $
.
⁄⁄$ %
StringSetAsync
⁄⁄% 3
(
⁄⁄3 4
userKey
⁄⁄4 ;
,
⁄⁄; <
	userValue
⁄⁄= F
,
⁄⁄F G
timeout
⁄⁄G N
)
⁄⁄N O
;
⁄⁄O P
}
€€ 	
private
›› 
async
›› 
Task
›› 
CacheSingleUser
›› *
(
››* +
int
››+ .
userId
››/ 5
)
››5 6
{
ﬁﬁ 	
var
ﬂﬂ 
user
ﬂﬂ 
=
ﬂﬂ 
await
ﬂﬂ 
_userContext
ﬂﬂ )
.
ﬂﬂ) *
Users
ﬂﬂ* /
.
ﬂﬂ/ 0!
FirstOrDefaultAsync
ﬂﬂ0 C
(
ﬂﬂC D
x
ﬂﬂD E
=>
ﬂﬂF H
x
ﬂﬂI J
.
ﬂﬂJ K
UserId
ﬂﬂK Q
==
ﬂﬂR T
userId
ﬂﬂU [
)
ﬂﬂ[ \
;
ﬂﬂ\ ]
if
‡‡ 
(
‡‡ 
user
‡‡ 
!=
‡‡ 
null
‡‡ 
)
‡‡ 
{
·· 
var
‚‚ 
userKey
‚‚ 
=
‚‚ 
$"
‚‚  
$str
‚‚  %
{
‚‚% &
user
‚‚& *
.
‚‚* +
UserId
‚‚+ 1
}
‚‚1 2
"
‚‚2 3
;
‚‚3 4
var
„„ 
	userValue
„„ 
=
„„ 
JsonSerializer
„„  .
.
„„. /
	Serialize
„„/ 8
(
„„8 9
user
„„9 =
)
„„= >
;
„„> ?
var
‰‰ 
timeout
‰‰ 
=
‰‰ 
TimeSpan
‰‰ &
.
‰‰& '
FromMinutes
‰‰' 2
(
‰‰2 3
$num
‰‰3 5
)
‰‰5 6
;
‰‰6 7
await
ÂÂ 
_redisDatabase
ÂÂ $
.
ÂÂ$ %
StringSetAsync
ÂÂ% 3
(
ÂÂ3 4
userKey
ÂÂ4 ;
,
ÂÂ; <
	userValue
ÂÂ= F
,
ÂÂF G
timeout
ÂÂG N
)
ÂÂN O
;
ÂÂO P
}
ÊÊ 
}
ÁÁ 	
private
ÈÈ 
async
ÈÈ 
Task
ÈÈ %
InvalidateAllUsersCache
ÈÈ 2
(
ÈÈ2 3
)
ÈÈ3 4
{
ÍÍ 	
string
ÎÎ 
key
ÎÎ 
=
ÎÎ 
$str
ÎÎ #
;
ÎÎ# $
await
ÏÏ 
_redisDatabase
ÏÏ  
.
ÏÏ  !
KeyDeleteAsync
ÏÏ! /
(
ÏÏ/ 0
key
ÏÏ0 3
)
ÏÏ3 4
;
ÏÏ4 5
}
ÌÌ 	
private
ÔÔ 
async
ÔÔ 
Task
ÔÔ '
InvalidateSingleUserCache
ÔÔ 4
(
ÔÔ4 5
int
ÔÔ5 8
userId
ÔÔ9 ?
)
ÔÔ? @
{
 	
string
ÒÒ 
key
ÒÒ 
=
ÒÒ 
$"
ÒÒ 
$str
ÒÒ 
{
ÒÒ  
userId
ÒÒ  &
}
ÒÒ& '
"
ÒÒ' (
;
ÒÒ( )
await
ÚÚ 
_redisDatabase
ÚÚ  
.
ÚÚ  !
KeyDeleteAsync
ÚÚ! /
(
ÚÚ/ 0
key
ÚÚ0 3
)
ÚÚ3 4
;
ÚÚ4 5
}
ÛÛ 	
}
ıı 
}ˆˆ »ò
7D:\BridgeLabz\BookStore\RepoLayer\Service\BookImplRL.cs
	namespace 	
RepositoryLayer
 
. 
Service !
{ 
public 

class 

BookImplRL 
: 
IBookRL %
{ 
private 
readonly 
UserContext $
_userContext% 1
;1 2
private 
readonly 
	IDatabase "
_redisDatabase# 1
;1 2
private 
readonly 
ILogger  
<  !

BookImplRL! +
>+ ,
_logger- 4
;4 5
public 

BookImplRL 
( 
UserContext %
context& -
,- ."
IConnectionMultiplexer/ E!
connectionMultiplexerF [
,[ \
ILogger] d
<d e

BookImplRLe o
>o p
loggerq w
)w x
{ 	
_userContext 
= 
context "
;" #
_redisDatabase 
= !
connectionMultiplexer 2
.2 3
GetDatabase3 >
(> ?
)? @
;@ A
_logger 
= 
logger 
; 
} 	
public 
async 
Task 
< 
ResponseDTO %
<% &
string& ,
>, -
>- .
UploadBookAsync/ >
(> ?
AddBookReqDTO? L
requestM T
,T U
intU X
userIdY _
)_ `
{   	
try!! 
{"" 
_logger## 
.## 
LogInformation## &
(##& '
$str##' R
)##R S
;##S T
var$$ 
existingBook$$  
=$$! "
await$$# (
_userContext$$) 5
.$$5 6
Books$$6 ;
.$$; <
FirstOrDefaultAsync$$< O
($$O P
x$$P Q
=>$$R T
x$$U V
.$$V W
BookName$$W _
==$$` b
request$$c j
.$$j k
BookName$$k s
&&$$t v
x$$w x
.$$x y
AuthorID	$$y Å
==
$$Ç Ñ
userId
$$Ö ã
)
$$ã å
;
$$å ç
if%% 
(%% 
existingBook%%  
!=%%! #
null%%$ (
)%%( )
{&& 
existingBook''  
.''  !
Quantity''! )
+=''* ,
request''- 4
.''4 5
Quantity''5 =
;''= >
await(( #
InvalidateAllBooksCache(( 1
(((1 2
)((2 3
;((3 4
await)) 
_userContext)) &
.))& '
SaveChangesAsync))' 7
())7 8
)))8 9
;))9 :
await** 
CacheSingleBook** )
(**) *
existingBook*** 6
.**6 7
BookId**7 =
)**= >
;**> ?
await++ 
CacheAllBooks++ '
(++' (
)++( )
;++) *
return-- 
new-- 
ResponseDTO-- *
<--* +
string--+ 1
>--1 2
{.. 
Success// 
=//  !
true//" &
,//& '
Message00 
=00  !
$str00" ;
}11 
;11 
}22 
var33 
book33 
=33 
new33 

BookEntity33 )
{44 
AuthorID55 
=55 
userId55 #
,55# $
BookName66 
=66 
request66 &
.66& '
BookName66' /
,66/ 0

AuthorName77 
=77  
request77! (
.77( )

AuthorName77) 3
,773 4
	BookImage88 
=88 
request88  '
.88' (
	BookImage88( 1
,881 2
Price99 
=99 
request99 #
.99# $
Price99$ )
,99) *
Description:: 
=::  !
request::" )
.::) *
Description::* 5
,::5 6
Quantity;; 
=;; 
request;; $
.;;$ %
Quantity;;% -
}<< 
;<< 
await== #
InvalidateAllBooksCache== -
(==- .
)==. /
;==/ 0
_userContext>> 
.>> 
Books>> "
.>>" #
Add>># &
(>>& '
book>>' +
)>>+ ,
;>>, -
await?? 
_userContext?? "
.??" #
SaveChangesAsync??# 3
(??3 4
)??4 5
;??5 6
_logger@@ 
.@@ 
LogInformation@@ &
(@@& '
$str@@' C
)@@C D
;@@D E
awaitAA 
CacheSingleBookAA %
(AA% &
bookAA& *
.AA* +
BookIdAA+ 1
)AA1 2
;AA2 3
awaitBB 
CacheAllBooksBB #
(BB# $
)BB$ %
;BB% &
returnCC 
newCC 
ResponseDTOCC &
<CC& '
stringCC' -
>CC- .
{DD 
SuccessEE 
=EE 
trueEE "
,EE" #
MessageFF 
=FF 
$strFF :
}GG 
;GG 
}HH 
catchII 
(II 
	ExceptionII 
exII 
)II  
{JJ 
_loggerKK 
.KK 
LogErrorKK  
(KK  !
exKK! #
,KK# $
$strKK% 8
)KK8 9
;KK9 :
returnLL 
awaitLL 
TaskLL !
.LL! "

FromResultLL" ,
(LL, -
newLL- 0
ResponseDTOLL1 <
<LL< =
stringLL= C
>LLC D
{MM 
SuccessNN 
=NN 
falseNN #
,NN# $
MessageOO 
=OO 
$strOO 4
,OO4 5
DataPP 
=PP 
exPP 
.PP 
MessagePP #
}QQ 
)QQ 
;QQ 
}RR 
}SS 	
publicUU 
asyncUU 
TaskUU 
<UU 
ResponseDTOUU %
<UU% &

BookEntityUU& 0
>UU0 1
>UU1 2
ViewBookByIdAsyncUU3 D
(UUD E
intUUE H
bookIdUUI O
)UUO P
{VV 	
tryWW 
{XX 
_loggerYY 
.YY 
LogInformationYY &
(YY& '
$strYY' F
)YYF G
;YYG H
stringZZ 
cacheKeyZZ 
=ZZ  !
$"ZZ" $
$strZZ$ )
{ZZ) *
bookIdZZ* 0
}ZZ0 1
"ZZ1 2
;ZZ2 3
var[[ 

cachedBook[[ 
=[[  
await[[! &
_redisDatabase[[' 5
.[[5 6
StringGetAsync[[6 D
([[D E
cacheKey[[E M
)[[M N
;[[N O
if\\ 
(\\ 

cachedBook\\ 
.\\ 
HasValue\\ '
)\\' (
{]] 
_logger^^ 
.^^ 
LogInformation^^ *
(^^* +
$str^^+ F
)^^F G
;^^G H
var__ 
book__ 
=__ 
JsonSerializer__ -
.__- .
Deserialize__. 9
<__9 :

BookEntity__: D
>__D E
(__E F

cachedBook__F P
)__P Q
;__Q R
return`` 
new`` 
ResponseDTO`` *
<``* +

BookEntity``+ 5
>``5 6
{aa 
Successbb 
=bb  !
truebb" &
,bb& '
Messagecc 
=cc  !
$strcc" =
,cc= >
Datadd 
=dd 
bookdd #
}ee 
;ee 
}ff 
elsegg 
{hh 
varii 
bookii 
=ii 
awaitii $
_userContextii% 1
.ii1 2
Booksii2 7
.ii7 8
FirstOrDefaultAsyncii8 K
(iiK L
xiiL M
=>iiN P
xiiQ R
.iiR S
BookIdiiS Y
==iiZ \
bookIdii] c
)iic d
;iid e
ifjj 
(jj 
bookjj 
!=jj 
nulljj  $
)jj$ %
{kk 
awaitll 
CacheSingleBookll -
(ll- .
bookIdll. 4
)ll4 5
;ll5 6
returnmm 
newmm "
ResponseDTOmm# .
<mm. /

BookEntitymm/ 9
>mm9 :
{nn 
Successoo #
=oo$ %
trueoo& *
,oo* +
Messagepp #
=pp$ %
$strpp& D
,ppD E
Dataqq  
=qq! "
bookqq# '
}rr 
;rr 
}ss 
elsett 
{uu 
returnvv 
newvv "
ResponseDTOvv# .
<vv. /

BookEntityvv/ 9
>vv9 :
{ww 
Successxx #
=xx$ %
falsexx& +
,xx+ ,
Messageyy #
=yy$ %
$stryy& 6
}zz 
;zz 
}{{ 
}|| 
}}} 
catch~~ 
(~~ 
	Exception~~ 
ex~~ 
)~~  
{ 
_logger
ÄÄ 
.
ÄÄ 
LogError
ÄÄ  
(
ÄÄ  !
ex
ÄÄ! #
,
ÄÄ# $
$str
ÄÄ% <
)
ÄÄ< =
;
ÄÄ= >
return
ÅÅ 
new
ÅÅ 
ResponseDTO
ÅÅ &
<
ÅÅ& '

BookEntity
ÅÅ' 1
>
ÅÅ1 2
{
ÇÇ 
Success
ÉÉ 
=
ÉÉ 
false
ÉÉ #
,
ÉÉ# $
Message
ÑÑ 
=
ÑÑ 
$str
ÑÑ 5
,
ÑÑ5 6
Data
ÖÖ 
=
ÖÖ 
null
ÖÖ 
}
ÜÜ 
;
ÜÜ 
}
áá 
}
àà 	
public
ää 
async
ää 
Task
ää 
<
ää 
ResponseDTO
ää %
<
ää% &
List
ää& *
<
ää* +

BookEntity
ää+ 5
>
ää5 6
>
ää6 7
>
ää7 8
GetAllBooksAsync
ää9 I
(
ääI J
)
ääJ K
{
ãã 	
try
åå 
{
çç 
var
éé 
cachedBooks
éé 
=
éé  !
await
éé" '
_redisDatabase
éé( 6
.
éé6 7
StringGetAsync
éé7 E
(
ééE F
$str
ééF M
)
ééM N
;
ééN O
if
èè 
(
èè 
cachedBooks
èè 
.
èè  
HasValue
èè  (
)
èè( )
{
êê 
_logger
íí 
.
íí 
LogInformation
íí *
(
íí* +
$str
íí+ G
)
ííG H
;
ííH I
var
ìì 
books
ìì 
=
ìì 
JsonSerializer
ìì  .
.
ìì. /
Deserialize
ìì/ :
<
ìì: ;
List
ìì; ?
<
ìì? @

BookEntity
ìì@ J
>
ììJ K
>
ììK L
(
ììL M
cachedBooks
ììM X
)
ììX Y
;
ììY Z
if
îî 
(
îî 
books
îî 
.
îî 
Count
îî #
==
îî$ &
$num
îî' (
)
îî( )
{
ïï 
return
ññ 
new
ññ "
ResponseDTO
ññ# .
<
ññ. /
List
ññ/ 3
<
ññ3 4

BookEntity
ññ4 >
>
ññ> ?
>
ññ? @
{
óó 
Success
òò #
=
òò$ %
false
òò& +
,
òò+ ,
Message
ôô #
=
ôô$ %
$str
ôô& ?
}
öö 
;
öö 
}
õõ 
return
úú 
new
úú 
ResponseDTO
úú *
<
úú* +
List
úú+ /
<
úú/ 0

BookEntity
úú0 :
>
úú: ;
>
úú; <
{
ùù 
Success
ûû 
=
ûû  !
true
ûû" &
,
ûû& '
Message
üü 
=
üü  !
$str
üü" >
,
üü> ?
Data
†† 
=
†† 
books
†† $
}
°° 
;
°° 
}
¢¢ 
else
££ 
{
§§ 
var
•• 
books
•• 
=
•• 
await
••  %
_userContext
••& 2
.
••2 3
Books
••3 8
.
••8 9
ToListAsync
••9 D
(
••D E
)
••E F
;
••F G
if
¶¶ 
(
¶¶ 
books
¶¶ 
.
¶¶ 
Count
¶¶ #
==
¶¶$ &
$num
¶¶' (
)
¶¶( )
{
ßß 
return
®® 
new
®® "
ResponseDTO
®®# .
<
®®. /
List
®®/ 3
<
®®3 4

BookEntity
®®4 >
>
®®> ?
>
®®? @
{
©© 
Success
™™ #
=
™™$ %
false
™™& +
,
™™+ ,
Message
´´ #
=
´´$ %
$str
´´& B
}
¨¨ 
;
¨¨ 
}
≠≠ 
await
ÆÆ 
CacheAllBooks
ÆÆ '
(
ÆÆ' (
)
ÆÆ( )
;
ÆÆ) *
return
ØØ 
new
ØØ 
ResponseDTO
ØØ *
<
ØØ* +
List
ØØ+ /
<
ØØ/ 0

BookEntity
ØØ0 :
>
ØØ: ;
>
ØØ; <
{
∞∞ 
Success
±± 
=
±±  !
true
±±" &
,
±±& '
Message
≤≤ 
=
≤≤  !
$str
≤≤" A
,
≤≤A B
Data
≥≥ 
=
≥≥ 
books
≥≥ $
}
¥¥ 
;
¥¥ 
}
µµ 
}
∂∂ 
catch
∑∑ 
(
∑∑ 
	Exception
∑∑ 
ex
∑∑ 
)
∑∑ 
{
∏∏ 
_logger
ππ 
.
ππ 
LogError
ππ  
(
ππ  !
ex
ππ! #
,
ππ# $
$str
ππ% A
)
ππA B
;
ππB C
return
∫∫ 
new
∫∫ 
ResponseDTO
∫∫ &
<
∫∫& '
List
∫∫' +
<
∫∫+ ,

BookEntity
∫∫, 6
>
∫∫6 7
>
∫∫7 8
{
ªª 
Success
ºº 
=
ºº 
false
ºº #
,
ºº# $
Message
ΩΩ 
=
ΩΩ 
$str
ΩΩ :
}
ææ 
;
ææ 
}
øø 
}
¿¿ 	
private
¬¬ 
async
¬¬ 
Task
¬¬ 
CacheAllUserBooks
¬¬ ,
(
¬¬, -
int
¬¬- 0
userId
¬¬1 7
)
¬¬7 8
{
√√ 	
var
ƒƒ 
users
ƒƒ 
=
ƒƒ 
await
ƒƒ 
_userContext
ƒƒ *
.
ƒƒ* +
Books
ƒƒ+ 0
.
ƒƒ0 1
Where
ƒƒ1 6
(
ƒƒ6 7
x
ƒƒ7 8
=>
ƒƒ8 :
x
ƒƒ: ;
.
ƒƒ; <
AuthorID
ƒƒ< D
==
ƒƒD F
userId
ƒƒF L
)
ƒƒL M
.
ƒƒM N
ToListAsync
ƒƒN Y
(
ƒƒY Z
)
ƒƒZ [
;
ƒƒ[ \
string
≈≈ 
cacheKey
≈≈ 
=
≈≈ 
$"
≈≈  
$str
≈≈  %
{
≈≈% &
userId
≈≈& ,
}
≈≈, -
$str
≈≈- 3
"
≈≈3 4
;
≈≈4 5
var
∆∆ 
serializedBooks
∆∆ 
=
∆∆  !
JsonSerializer
∆∆" 0
.
∆∆0 1
	Serialize
∆∆1 :
(
∆∆: ;
users
∆∆; @
)
∆∆@ A
;
∆∆A B
await
»» 
_redisDatabase
»»  
.
»»  !
StringSetAsync
»»! /
(
»»/ 0
cacheKey
»»0 8
,
»»8 9
serializedBooks
»»: I
,
»»I J
TimeSpan
»»K S
.
»»S T
FromMinutes
»»T _
(
»»_ `
$num
»»` b
)
»»b c
)
»»c d
;
»»d e
}
…… 	
private
ÀÀ 
async
ÀÀ 
Task
ÀÀ 
CacheAllBooks
ÀÀ (
(
ÀÀ( )
)
ÀÀ) *
{
ÃÃ 	
var
ÕÕ 
books
ÕÕ 
=
ÕÕ 
await
ÕÕ 
_userContext
ÕÕ *
.
ÕÕ* +
Books
ÕÕ+ 0
.
ÕÕ0 1
ToListAsync
ÕÕ1 <
(
ÕÕ< =
)
ÕÕ= >
;
ÕÕ> ?
string
ŒŒ 
cacheKey
ŒŒ 
=
ŒŒ 
$str
ŒŒ %
;
ŒŒ% &
var
œœ 
serializedBooks
œœ 
=
œœ  !
JsonSerializer
œœ" 0
.
œœ0 1
	Serialize
œœ1 :
(
œœ: ;
books
œœ; @
)
œœ@ A
;
œœA B
await
–– 
_redisDatabase
––  
.
––  !
StringSetAsync
––! /
(
––/ 0
cacheKey
––0 8
,
––8 9
serializedBooks
––: I
,
––I J
TimeSpan
––K S
.
––S T
FromMinutes
––T _
(
––_ `
$num
––` b
)
––b c
)
––c d
;
––d e
}
—— 	
private
”” 
async
”” 
Task
”” 
CacheSingleBook
”” *
(
””* +
int
””+ .
bookId
””/ 5
)
””5 6
{
‘‘ 	
var
’’ 
book
’’ 
=
’’ 
await
’’ 
_userContext
’’ )
.
’’) *
Books
’’* /
.
’’/ 0!
FirstOrDefaultAsync
’’0 C
(
’’C D
x
’’D E
=>
’’F H
x
’’I J
.
’’J K
BookId
’’K Q
==
’’R T
bookId
’’U [
)
’’[ \
;
’’\ ]
string
÷÷ 
cacheKey
÷÷ 
=
÷÷ 
$"
÷÷  
$str
÷÷  %
{
÷÷% &
bookId
÷÷& ,
}
÷÷, -
"
÷÷- .
;
÷÷. /
var
◊◊ 
serializedBook
◊◊ 
=
◊◊  
JsonSerializer
◊◊! /
.
◊◊/ 0
	Serialize
◊◊0 9
(
◊◊9 :
book
◊◊: >
)
◊◊> ?
;
◊◊? @
await
ÿÿ 
_redisDatabase
ÿÿ  
.
ÿÿ  !
StringSetAsync
ÿÿ! /
(
ÿÿ/ 0
cacheKey
ÿÿ0 8
,
ÿÿ8 9
serializedBook
ÿÿ: H
,
ÿÿH I
TimeSpan
ÿÿJ R
.
ÿÿR S
FromMinutes
ÿÿS ^
(
ÿÿ^ _
$num
ÿÿ_ a
)
ÿÿa b
)
ÿÿb c
;
ÿÿc d
}
ŸŸ 	
private
⁄⁄ 
async
⁄⁄ 
Task
⁄⁄ )
InvalidateAllUserBooksCache
⁄⁄ 6
(
⁄⁄6 7
int
⁄⁄7 :
userId
⁄⁄; A
)
⁄⁄A B
{
€€ 	
string
‹‹ 
cacheKey
‹‹ 
=
‹‹ 
$"
‹‹  
$str
‹‹  %
{
‹‹% &
userId
‹‹& ,
}
‹‹, -
$str
‹‹- 3
"
‹‹3 4
;
‹‹4 5
await
›› 
_redisDatabase
››  
.
››  !
KeyDeleteAsync
››! /
(
››/ 0
cacheKey
››0 8
)
››8 9
;
››9 :
}
ﬁﬁ 	
private
ﬂﬂ 
async
ﬂﬂ 
Task
ﬂﬂ %
InvalidateAllBooksCache
ﬂﬂ 2
(
ﬂﬂ2 3
)
ﬂﬂ3 4
{
‡‡ 	
string
·· 
cacheKey
·· 
=
·· 
$str
·· %
;
··% &
await
‚‚ 
_redisDatabase
‚‚  
.
‚‚  !
KeyDeleteAsync
‚‚! /
(
‚‚/ 0
cacheKey
‚‚0 8
)
‚‚8 9
;
‚‚9 :
}
„„ 	
private
‰‰ 
async
‰‰ 
Task
‰‰ '
InvalidateSingleBookCache
‰‰ 4
(
‰‰4 5
int
‰‰5 8
bookId
‰‰9 ?
)
‰‰? @
{
ÂÂ 	
string
ÊÊ 
cacheKey
ÊÊ 
=
ÊÊ 
$"
ÊÊ  
$str
ÊÊ  %
{
ÊÊ% &
bookId
ÊÊ& ,
}
ÊÊ, -
"
ÊÊ- .
;
ÊÊ. /
await
ÁÁ 
_redisDatabase
ÁÁ  
.
ÁÁ  !
KeyDeleteAsync
ÁÁ! /
(
ÁÁ/ 0
cacheKey
ÁÁ0 8
)
ÁÁ8 9
;
ÁÁ9 :
}
ËË 	
}
ÈÈ 
}ÍÍ á 
KD:\BridgeLabz\BookStore\RepoLayer\Migrations\20250508041040_MajorSchemas.cs
	namespace 	
RepositoryLayer
 
. 

Migrations $
{ 
public		 

partial		 
class		 
MajorSchemas		 %
:		& '
	Migration		( 1
{

 
	protected 
override 
void 
Up  "
(" #
MigrationBuilder# 3
migrationBuilder4 D
)D E
{ 	
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str 
, 
columns 
: 
table 
=> !
new" %
{ 
UserId 
= 
table "
." #
Column# )
<) *
int* -
>- .
(. /
type/ 3
:3 4
$str5 :
,: ;
nullable< D
:D E
falseF K
)K L
. 

Annotation #
(# $
$str$ 8
,8 9
$str: @
)@ A
,A B
	FirstName 
= 
table  %
.% &
Column& ,
<, -
string- 3
>3 4
(4 5
type5 9
:9 :
$str; J
,J K
nullableL T
:T U
falseV [
)[ \
,\ ]
LastName 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
,[ \
Email 
= 
table !
.! "
Column" (
<( )
string) /
>/ 0
(0 1
type1 5
:5 6
$str7 F
,F G
nullableH P
:P Q
falseR W
)W X
,X Y
Password 
= 
table $
.$ %
Column% +
<+ ,
string, 2
>2 3
(3 4
type4 8
:8 9
$str: I
,I J
nullableK S
:S T
falseU Z
)Z [
} 
, 
constraints 
: 
table "
=># %
{ 
table 
. 

PrimaryKey $
($ %
$str% /
,/ 0
x1 2
=>3 5
x6 7
.7 8
UserId8 >
)> ?
;? @
} 
) 
; 
migrationBuilder 
. 
CreateTable (
(( )
name 
: 
$str !
,! "
columns   
:   
table   
=>   !
new  " %
{!! 
	AddressId"" 
="" 
table""  %
.""% &
Column""& ,
<"", -
int""- 0
>""0 1
(""1 2
type""2 6
:""6 7
$str""8 =
,""= >
nullable""? G
:""G H
false""I N
)""N O
.## 

Annotation## #
(### $
$str##$ 8
,##8 9
$str##: @
)##@ A
,##A B
Address$$ 
=$$ 
table$$ #
.$$# $
Column$$$ *
<$$* +
string$$+ 1
>$$1 2
($$2 3
type$$3 7
:$$7 8
$str$$9 H
,$$H I
nullable$$J R
:$$R S
false$$T Y
)$$Y Z
,$$Z [
City%% 
=%% 
table%%  
.%%  !
Column%%! '
<%%' (
string%%( .
>%%. /
(%%/ 0
type%%0 4
:%%4 5
$str%%6 E
,%%E F
nullable%%G O
:%%O P
false%%Q V
)%%V W
,%%W X
State&& 
=&& 
table&& !
.&&! "
Column&&" (
<&&( )
string&&) /
>&&/ 0
(&&0 1
type&&1 5
:&&5 6
$str&&7 F
,&&F G
nullable&&H P
:&&P Q
false&&R W
)&&W X
,&&X Y
Type'' 
='' 
table''  
.''  !
Column''! '
<''' (
int''( +
>''+ ,
('', -
type''- 1
:''1 2
$str''3 8
,''8 9
nullable'': B
:''B C
false''D I
)''I J
,''J K
UserId(( 
=(( 
table(( "
.((" #
Column((# )
<(() *
int((* -
>((- .
(((. /
type((/ 3
:((3 4
$str((5 :
,((: ;
nullable((< D
:((D E
false((F K
)((K L
,((L M
Name)) 
=)) 
table))  
.))  !
Column))! '
<))' (
string))( .
>)). /
())/ 0
type))0 4
:))4 5
$str))6 E
,))E F
nullable))G O
:))O P
false))Q V
)))V W
,))W X
MobileNumber**  
=**! "
table**# (
.**( )
Column**) /
<**/ 0
string**0 6
>**6 7
(**7 8
type**8 <
:**< =
$str**> M
,**M N
nullable**O W
:**W X
false**Y ^
)**^ _
}++ 
,++ 
constraints,, 
:,, 
table,, "
=>,,# %
{-- 
table.. 
... 

PrimaryKey.. $
(..$ %
$str..% 3
,..3 4
x..5 6
=>..7 9
x..: ;
...; <
	AddressId..< E
)..E F
;..F G
table// 
.// 

ForeignKey// $
(//$ %
name00 
:00 
$str00 9
,009 :
column11 
:11 
x11  !
=>11" $
x11% &
.11& '
UserId11' -
,11- .
principalTable22 &
:22& '
$str22( /
,22/ 0
principalColumn33 '
:33' (
$str33) 1
,331 2
onDelete44  
:44  !
ReferentialAction44" 3
.443 4
NoAction444 <
)44< =
;44= >
}55 
)55 
;55 
migrationBuilder77 
.77 
CreateTable77 (
(77( )
name88 
:88 
$str88 
,88 
columns99 
:99 
table99 
=>99 !
new99" %
{:: 
BookId;; 
=;; 
table;; "
.;;" #
Column;;# )
<;;) *
int;;* -
>;;- .
(;;. /
type;;/ 3
:;;3 4
$str;;5 :
,;;: ;
nullable;;< D
:;;D E
false;;F K
);;K L
.<< 

Annotation<< #
(<<# $
$str<<$ 8
,<<8 9
$str<<: @
)<<@ A
,<<A B
AuthorID== 
=== 
table== $
.==$ %
Column==% +
<==+ ,
int==, /
>==/ 0
(==0 1
type==1 5
:==5 6
$str==7 <
,==< =
nullable==> F
:==F G
false==H M
)==M N
,==N O
BookName>> 
=>> 
table>> $
.>>$ %
Column>>% +
<>>+ ,
string>>, 2
>>>2 3
(>>3 4
type>>4 8
:>>8 9
$str>>: I
,>>I J
nullable>>K S
:>>S T
false>>U Z
)>>Z [
,>>[ \
	BookImage?? 
=?? 
table??  %
.??% &
Column??& ,
<??, -
string??- 3
>??3 4
(??4 5
type??5 9
:??9 :
$str??; J
,??J K
nullable??L T
:??T U
false??V [
)??[ \
,??\ ]
Description@@ 
=@@  !
table@@" '
.@@' (
Column@@( .
<@@. /
string@@/ 5
>@@5 6
(@@6 7
type@@7 ;
:@@; <
$str@@= L
,@@L M
nullable@@N V
:@@V W
false@@X ]
)@@] ^
,@@^ _

AuthorNameAA 
=AA  
tableAA! &
.AA& '
ColumnAA' -
<AA- .
stringAA. 4
>AA4 5
(AA5 6
typeAA6 :
:AA: ;
$strAA< K
,AAK L
nullableAAM U
:AAU V
falseAAW \
)AA\ ]
,AA] ^
QuantityBB 
=BB 
tableBB $
.BB$ %
ColumnBB% +
<BB+ ,
intBB, /
>BB/ 0
(BB0 1
typeBB1 5
:BB5 6
$strBB7 <
,BB< =
nullableBB> F
:BBF G
falseBBH M
)BBM N
,BBN O
PriceCC 
=CC 
tableCC !
.CC! "
ColumnCC" (
<CC( )
floatCC) .
>CC. /
(CC/ 0
typeCC0 4
:CC4 5
$strCC6 <
,CC< =
nullableCC> F
:CCF G
falseCCH M
)CCM N
}DD 
,DD 
constraintsEE 
:EE 
tableEE "
=>EE# %
{FF 
tableGG 
.GG 

PrimaryKeyGG $
(GG$ %
$strGG% /
,GG/ 0
xGG1 2
=>GG3 5
xGG6 7
.GG7 8
BookIdGG8 >
)GG> ?
;GG? @
tableHH 
.HH 

ForeignKeyHH $
(HH$ %
nameII 
:II 
$strII 7
,II7 8
columnJJ 
:JJ 
xJJ  !
=>JJ" $
xJJ% &
.JJ& '
AuthorIDJJ' /
,JJ/ 0
principalTableKK &
:KK& '
$strKK( /
,KK/ 0
principalColumnLL '
:LL' (
$strLL) 1
,LL1 2
onDeleteMM  
:MM  !
ReferentialActionMM" 3
.MM3 4
NoActionMM4 <
)MM< =
;MM= >
}NN 
)NN 
;NN 
migrationBuilderPP 
.PP 
CreateTablePP (
(PP( )
nameQQ 
:QQ 
$strQQ 
,QQ 
columnsRR 
:RR 
tableRR 
=>RR !
newRR" %
{SS 
CartIdTT 
=TT 
tableTT "
.TT" #
ColumnTT# )
<TT) *
intTT* -
>TT- .
(TT. /
typeTT/ 3
:TT3 4
$strTT5 :
,TT: ;
nullableTT< D
:TTD E
falseTTF K
)TTK L
.UU 

AnnotationUU #
(UU# $
$strUU$ 8
,UU8 9
$strUU: @
)UU@ A
,UUA B
UserIdVV 
=VV 
tableVV "
.VV" #
ColumnVV# )
<VV) *
intVV* -
>VV- .
(VV. /
typeVV/ 3
:VV3 4
$strVV5 :
,VV: ;
nullableVV< D
:VVD E
falseVVF K
)VVK L
,VVL M
BookIdWW 
=WW 
tableWW "
.WW" #
ColumnWW# )
<WW) *
intWW* -
>WW- .
(WW. /
typeWW/ 3
:WW3 4
$strWW5 :
,WW: ;
nullableWW< D
:WWD E
falseWWF K
)WWK L
,WWL M
QuantityXX 
=XX 
tableXX $
.XX$ %
ColumnXX% +
<XX+ ,
intXX, /
>XX/ 0
(XX0 1
typeXX1 5
:XX5 6
$strXX7 <
,XX< =
nullableXX> F
:XXF G
falseXXH M
)XXM N
,XXN O

IsUncartedYY 
=YY  
tableYY! &
.YY& '
ColumnYY' -
<YY- .
boolYY. 2
>YY2 3
(YY3 4
typeYY4 8
:YY8 9
$strYY: ?
,YY? @
nullableYYA I
:YYI J
falseYYK P
)YYP Q
,YYQ R
	IsOrderedZZ 
=ZZ 
tableZZ  %
.ZZ% &
ColumnZZ& ,
<ZZ, -
boolZZ- 1
>ZZ1 2
(ZZ2 3
typeZZ3 7
:ZZ7 8
$strZZ9 >
,ZZ> ?
nullableZZ@ H
:ZZH I
falseZZJ O
)ZZO P
}[[ 
,[[ 
constraints\\ 
:\\ 
table\\ "
=>\\# %
{]] 
table^^ 
.^^ 

PrimaryKey^^ $
(^^$ %
$str^^% .
,^^. /
x^^0 1
=>^^2 4
x^^5 6
.^^6 7
CartId^^7 =
)^^= >
;^^> ?
table__ 
.__ 

ForeignKey__ $
(__$ %
name`` 
:`` 
$str`` 4
,``4 5
columnaa 
:aa 
xaa  !
=>aa" $
xaa% &
.aa& '
BookIdaa' -
,aa- .
principalTablebb &
:bb& '
$strbb( /
,bb/ 0
principalColumncc '
:cc' (
$strcc) 1
,cc1 2
onDeletedd  
:dd  !
ReferentialActiondd" 3
.dd3 4
NoActiondd4 <
)dd< =
;dd= >
tableee 
.ee 

ForeignKeyee $
(ee$ %
nameff 
:ff 
$strff 4
,ff4 5
columngg 
:gg 
xgg  !
=>gg" $
xgg% &
.gg& '
UserIdgg' -
,gg- .
principalTablehh &
:hh& '
$strhh( /
,hh/ 0
principalColumnii '
:ii' (
$strii) 1
,ii1 2
onDeletejj  
:jj  !
ReferentialActionjj" 3
.jj3 4
NoActionjj4 <
)jj< =
;jj= >
}kk 
)kk 
;kk 
migrationBuildermm 
.mm 
CreateTablemm (
(mm( )
namenn 
:nn 
$strnn 
,nn 
columnsoo 
:oo 
tableoo 
=>oo !
newoo" %
{pp 
OrderIdqq 
=qq 
tableqq #
.qq# $
Columnqq$ *
<qq* +
intqq+ .
>qq. /
(qq/ 0
typeqq0 4
:qq4 5
$strqq6 ;
,qq; <
nullableqq= E
:qqE F
falseqqG L
)qqL M
.rr 

Annotationrr #
(rr# $
$strrr$ 8
,rr8 9
$strrr: @
)rr@ A
,rrA B
UserIdss 
=ss 
tabless "
.ss" #
Columnss# )
<ss) *
intss* -
>ss- .
(ss. /
typess/ 3
:ss3 4
$strss5 :
,ss: ;
nullabless< D
:ssD E
falsessF K
)ssK L
,ssL M
BookIdtt 
=tt 
tablett "
.tt" #
Columntt# )
<tt) *
inttt* -
>tt- .
(tt. /
typett/ 3
:tt3 4
$strtt5 :
,tt: ;
nullablett< D
:ttD E
falsettF K
)ttK L
,ttL M
	AddressIduu 
=uu 
tableuu  %
.uu% &
Columnuu& ,
<uu, -
intuu- 0
>uu0 1
(uu1 2
typeuu2 6
:uu6 7
$struu8 =
,uu= >
nullableuu? G
:uuG H
falseuuI N
)uuN O
,uuO P
	OrderDatevv 
=vv 
tablevv  %
.vv% &
Columnvv& ,
<vv, -
DateTimevv- 5
>vv5 6
(vv6 7
typevv7 ;
:vv; <
$strvv= H
,vvH I
nullablevvJ R
:vvR S
falsevvT Y
)vvY Z
}ww 
,ww 
constraintsxx 
:xx 
tablexx "
=>xx# %
{yy 
tablezz 
.zz 

PrimaryKeyzz $
(zz$ %
$strzz% 0
,zz0 1
xzz2 3
=>zz4 6
xzz7 8
.zz8 9
OrderIdzz9 @
)zz@ A
;zzA B
table{{ 
.{{ 

ForeignKey{{ $
({{$ %
name|| 
:|| 
$str|| =
,||= >
column}} 
:}} 
x}}  !
=>}}" $
x}}% &
.}}& '
	AddressId}}' 0
,}}0 1
principalTable~~ &
:~~& '
$str~~( 3
,~~3 4
principalColumn '
:' (
$str) 4
,4 5
onDelete
ÄÄ  
:
ÄÄ  !
ReferentialAction
ÄÄ" 3
.
ÄÄ3 4
NoAction
ÄÄ4 <
)
ÄÄ< =
;
ÄÄ= >
table
ÅÅ 
.
ÅÅ 

ForeignKey
ÅÅ $
(
ÅÅ$ %
name
ÇÇ 
:
ÇÇ 
$str
ÇÇ 6
,
ÇÇ6 7
column
ÉÉ 
:
ÉÉ 
x
ÉÉ  !
=>
ÉÉ" $
x
ÉÉ% &
.
ÉÉ& '
BookId
ÉÉ' -
,
ÉÉ- .
principalTable
ÑÑ &
:
ÑÑ& '
$str
ÑÑ( /
,
ÑÑ/ 0
principalColumn
ÖÖ '
:
ÖÖ' (
$str
ÖÖ) 1
,
ÖÖ1 2
onDelete
ÜÜ  
:
ÜÜ  !
ReferentialAction
ÜÜ" 3
.
ÜÜ3 4
NoAction
ÜÜ4 <
)
ÜÜ< =
;
ÜÜ= >
table
áá 
.
áá 

ForeignKey
áá $
(
áá$ %
name
àà 
:
àà 
$str
àà 6
,
àà6 7
column
ââ 
:
ââ 
x
ââ  !
=>
ââ" $
x
ââ% &
.
ââ& '
UserId
ââ' -
,
ââ- .
principalTable
ää &
:
ää& '
$str
ää( /
,
ää/ 0
principalColumn
ãã '
:
ãã' (
$str
ãã) 1
,
ãã1 2
onDelete
åå  
:
åå  !
ReferentialAction
åå" 3
.
åå3 4
NoAction
åå4 <
)
åå< =
;
åå= >
}
çç 
)
çç 
;
çç 
migrationBuilder
èè 
.
èè 
CreateTable
èè (
(
èè( )
name
êê 
:
êê 
$str
êê  
,
êê  !
columns
ëë 
:
ëë 
table
ëë 
=>
ëë !
new
ëë" %
{
íí 

WishListId
ìì 
=
ìì  
table
ìì! &
.
ìì& '
Column
ìì' -
<
ìì- .
int
ìì. 1
>
ìì1 2
(
ìì2 3
type
ìì3 7
:
ìì7 8
$str
ìì9 >
,
ìì> ?
nullable
ìì@ H
:
ììH I
false
ììJ O
)
ììO P
.
îî 

Annotation
îî #
(
îî# $
$str
îî$ 8
,
îî8 9
$str
îî: @
)
îî@ A
,
îîA B
UserId
ïï 
=
ïï 
table
ïï "
.
ïï" #
Column
ïï# )
<
ïï) *
int
ïï* -
>
ïï- .
(
ïï. /
type
ïï/ 3
:
ïï3 4
$str
ïï5 :
,
ïï: ;
nullable
ïï< D
:
ïïD E
false
ïïF K
)
ïïK L
,
ïïL M
BookId
ññ 
=
ññ 
table
ññ "
.
ññ" #
Column
ññ# )
<
ññ) *
int
ññ* -
>
ññ- .
(
ññ. /
type
ññ/ 3
:
ññ3 4
$str
ññ5 :
,
ññ: ;
nullable
ññ< D
:
ññD E
false
ññF K
)
ññK L
,
ññL M
IsCarted
óó 
=
óó 
table
óó $
.
óó$ %
Column
óó% +
<
óó+ ,
bool
óó, 0
>
óó0 1
(
óó1 2
type
óó2 6
:
óó6 7
$str
óó8 =
,
óó= >
nullable
óó? G
:
óóG H
false
óóI N
)
óóN O
}
òò 
,
òò 
constraints
ôô 
:
ôô 
table
ôô "
=>
ôô# %
{
öö 
table
õõ 
.
õõ 

PrimaryKey
õõ $
(
õõ$ %
$str
õõ% 2
,
õõ2 3
x
õõ4 5
=>
õõ6 8
x
õõ9 :
.
õõ: ;

WishListId
õõ; E
)
õõE F
;
õõF G
table
úú 
.
úú 

ForeignKey
úú $
(
úú$ %
name
ùù 
:
ùù 
$str
ùù 8
,
ùù8 9
column
ûû 
:
ûû 
x
ûû  !
=>
ûû" $
x
ûû% &
.
ûû& '
BookId
ûû' -
,
ûû- .
principalTable
üü &
:
üü& '
$str
üü( /
,
üü/ 0
principalColumn
†† '
:
††' (
$str
††) 1
,
††1 2
onDelete
°°  
:
°°  !
ReferentialAction
°°" 3
.
°°3 4
NoAction
°°4 <
)
°°< =
;
°°= >
table
¢¢ 
.
¢¢ 

ForeignKey
¢¢ $
(
¢¢$ %
name
££ 
:
££ 
$str
££ 8
,
££8 9
column
§§ 
:
§§ 
x
§§  !
=>
§§" $
x
§§% &
.
§§& '
UserId
§§' -
,
§§- .
principalTable
•• &
:
••& '
$str
••( /
,
••/ 0
principalColumn
¶¶ '
:
¶¶' (
$str
¶¶) 1
,
¶¶1 2
onDelete
ßß  
:
ßß  !
ReferentialAction
ßß" 3
.
ßß3 4
NoAction
ßß4 <
)
ßß< =
;
ßß= >
}
®® 
)
®® 
;
®® 
migrationBuilder
™™ 
.
™™ 
CreateIndex
™™ (
(
™™( )
name
´´ 
:
´´ 
$str
´´ +
,
´´+ ,
table
¨¨ 
:
¨¨ 
$str
¨¨ "
,
¨¨" #
column
≠≠ 
:
≠≠ 
$str
≠≠  
)
≠≠  !
;
≠≠! "
migrationBuilder
ØØ 
.
ØØ 
CreateIndex
ØØ (
(
ØØ( )
name
∞∞ 
:
∞∞ 
$str
∞∞ )
,
∞∞) *
table
±± 
:
±± 
$str
±± 
,
±± 
column
≤≤ 
:
≤≤ 
$str
≤≤ "
)
≤≤" #
;
≤≤# $
migrationBuilder
¥¥ 
.
¥¥ 
CreateIndex
¥¥ (
(
¥¥( )
name
µµ 
:
µµ 
$str
µµ &
,
µµ& '
table
∂∂ 
:
∂∂ 
$str
∂∂ 
,
∂∂ 
column
∑∑ 
:
∑∑ 
$str
∑∑  
)
∑∑  !
;
∑∑! "
migrationBuilder
ππ 
.
ππ 
CreateIndex
ππ (
(
ππ( )
name
∫∫ 
:
∫∫ 
$str
∫∫ &
,
∫∫& '
table
ªª 
:
ªª 
$str
ªª 
,
ªª 
column
ºº 
:
ºº 
$str
ºº  
)
ºº  !
;
ºº! "
migrationBuilder
ææ 
.
ææ 
CreateIndex
ææ (
(
ææ( )
name
øø 
:
øø 
$str
øø +
,
øø+ ,
table
¿¿ 
:
¿¿ 
$str
¿¿ 
,
¿¿  
column
¡¡ 
:
¡¡ 
$str
¡¡ #
)
¡¡# $
;
¡¡$ %
migrationBuilder
√√ 
.
√√ 
CreateIndex
√√ (
(
√√( )
name
ƒƒ 
:
ƒƒ 
$str
ƒƒ (
,
ƒƒ( )
table
≈≈ 
:
≈≈ 
$str
≈≈ 
,
≈≈  
column
∆∆ 
:
∆∆ 
$str
∆∆  
)
∆∆  !
;
∆∆! "
migrationBuilder
»» 
.
»» 
CreateIndex
»» (
(
»»( )
name
…… 
:
…… 
$str
…… (
,
……( )
table
   
:
   
$str
   
,
    
column
ÀÀ 
:
ÀÀ 
$str
ÀÀ  
)
ÀÀ  !
;
ÀÀ! "
migrationBuilder
ÕÕ 
.
ÕÕ 
CreateIndex
ÕÕ (
(
ÕÕ( )
name
ŒŒ 
:
ŒŒ 
$str
ŒŒ *
,
ŒŒ* +
table
œœ 
:
œœ 
$str
œœ !
,
œœ! "
column
–– 
:
–– 
$str
––  
)
––  !
;
––! "
migrationBuilder
““ 
.
““ 
CreateIndex
““ (
(
““( )
name
”” 
:
”” 
$str
”” *
,
””* +
table
‘‘ 
:
‘‘ 
$str
‘‘ !
,
‘‘! "
column
’’ 
:
’’ 
$str
’’  
)
’’  !
;
’’! "
}
÷÷ 	
	protected
ŸŸ 
override
ŸŸ 
void
ŸŸ 
Down
ŸŸ  $
(
ŸŸ$ %
MigrationBuilder
ŸŸ% 5
migrationBuilder
ŸŸ6 F
)
ŸŸF G
{
⁄⁄ 	
migrationBuilder
€€ 
.
€€ 
	DropTable
€€ &
(
€€& '
name
‹‹ 
:
‹‹ 
$str
‹‹ 
)
‹‹ 
;
‹‹ 
migrationBuilder
ﬁﬁ 
.
ﬁﬁ 
	DropTable
ﬁﬁ &
(
ﬁﬁ& '
name
ﬂﬂ 
:
ﬂﬂ 
$str
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ  
migrationBuilder
·· 
.
·· 
	DropTable
·· &
(
··& '
name
‚‚ 
:
‚‚ 
$str
‚‚  
)
‚‚  !
;
‚‚! "
migrationBuilder
‰‰ 
.
‰‰ 
	DropTable
‰‰ &
(
‰‰& '
name
ÂÂ 
:
ÂÂ 
$str
ÂÂ !
)
ÂÂ! "
;
ÂÂ" #
migrationBuilder
ÁÁ 
.
ÁÁ 
	DropTable
ÁÁ &
(
ÁÁ& '
name
ËË 
:
ËË 
$str
ËË 
)
ËË 
;
ËË 
migrationBuilder
ÍÍ 
.
ÍÍ 
	DropTable
ÍÍ &
(
ÍÍ& '
name
ÎÎ 
:
ÎÎ 
$str
ÎÎ 
)
ÎÎ 
;
ÎÎ 
}
ÏÏ 	
}
ÌÌ 
}ÓÓ ƒ
:D:\BridgeLabz\BookStore\RepoLayer\Interface\IWishlistRL.cs
	namespace		 	
RepositoryLayer		
 
.		 
	Interface		 #
{

 
public 

	interface 
IWishlistRL  
{ 
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
WishlistBookAsync) :
(: ;
int; >
bookId? E
,E F
intG J
userIdK Q
)Q R
;R S
public 
Task 
< 
ResponseDTO 
<  
List  $
<$ %
WishListEntity% 3
>3 4
>4 5
>5 6&
GetAllWishlistedBooksAsync7 Q
(Q R
intR U
userIdV \
)\ ]
;] ^
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' ('
RemoveBookFromWishlistAsync) D
(D E
intE H
bookIdI O
,O P
intQ T
userIdU [
)[ \
;\ ]
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
ClearWishlistAsync) ;
(; <
int< ?
userId@ F
)F G
;G H
} 
} ü
6D:\BridgeLabz\BookStore\RepoLayer\Interface\IUserRL.cs
	namespace		 	
RepositoryLayer		
 
.		 
	Interface		 #
{

 
public 

	interface 
IUserRL 
{ 
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
RegisterUserAsync) :
(: ;

RegUserDTO; E
requestF M
)M N
;N O
public 
Task 
< 
ResponseDTO 
<  
LoginResponseDTO  0
>0 1
>1 2

LoginAsync3 =
(= >
string> D
emailE J
,J K
stringL R
passwordS [
)[ \
;\ ]
public 
Task 
< 
ResponseDTO 
<  
List  $
<$ %

UserEntity% /
>/ 0
>0 1
>1 2
GetAllUsersAsync3 C
(C D
)D E
;E F
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
DeleteUserAsync) 8
(8 9
string9 ?
email@ E
)E F
;F G
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
ForgotPasswordAsync) <
(< =
string= C
emailD I
)I J
;J K
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
ResetPasswordAsync) ;
(; <
string< B
emailC H
,H I
stringJ P
newPasswordQ \
)\ ]
;] ^
} 
} Ù
7D:\BridgeLabz\BookStore\RepoLayer\Interface\IOrderRL.cs
	namespace		 	
RepositoryLayer		
 
.		 
	Interface		 #
{

 
public 

	interface 
IOrderRL 
{ 
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
OrderBookAsync) 7
(7 8
OrderDTO8 @
orderA F
,F G
intG J
userIdK Q
)Q R
;R S
public 
Task 
< 
ResponseDTO 
<  
List  $
<$ %
OrderEntity% 0
>0 1
>1 2
>2 3
GetAllOrdersAsync4 E
(E F
intF I
userIdJ P
)P Q
;Q R
} 
} •
6D:\BridgeLabz\BookStore\RepoLayer\Interface\ICartRL.cs
	namespace 	
RepositoryLayer
 
. 
	Interface #
{		 
public

 

	interface

 
ICartRL

 
{ 
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
AddToCartAsync) 7
(7 8
AddToCartReqDTO8 G
addToCartReqDTOH W
,W X
intY \
userId] c
)c d
;d e
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
RemoveFromCartAsync) <
(< =
int= @
cartIdA G
,G H
intI L
userIdM S
)S T
;T U
public 
Task 
< 
ResponseDTO 
<  
List  $
<$ %
CartResponseDTO% 4
>4 5
>5 6
>6 7 
GetAllCartItemsAsync8 L
(L M
intM P
userIdQ W
)W X
;X Y
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
UpdateCartAsync) 8
(8 9
int9 <
cartId= C
,C D
intE H
quantityI Q
,Q R
intS V
userIdW ]
)] ^
;^ _
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
ClearCartAsync) 7
(7 8
int8 ;
userId< B
)B C
;C D
} 
} ◊
6D:\BridgeLabz\BookStore\RepoLayer\Interface\IBookRL.cs
	namespace		 	
RepositoryLayer		
 
.		 
	Interface		 #
{

 
public 

	interface 
IBookRL 
{ 
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
UploadBookAsync) 8
(8 9
AddBookReqDTO9 F
requestG N
,N O
intO R
userIdS Y
)Y Z
;Z [
public 
Task 
< 
ResponseDTO 
<  

BookEntity  *
>* +
>+ ,
ViewBookByIdAsync- >
(> ?
int? B
bookIdC I
)I J
;J K
public 
Task 
< 
ResponseDTO 
<  
List  $
<$ %

BookEntity% /
>/ 0
>0 1
>1 2
GetAllBooksAsync3 C
(C D
)D E
;E F
} 
} ª
9D:\BridgeLabz\BookStore\RepoLayer\Interface\IAddressRL.cs
	namespace		 	
RepositoryLayer		
 
.		 
	Interface		 #
{

 
public 

	interface 

IAddressRL 
{ 
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
AddAddressAsync) 8
(8 9
UserAddressReqDTO9 J
requestK R
,R S
intT W
userIdX ^
)^ _
;_ `
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
UpdateAddressAsync) ;
(; <
UserAddressReqDTO< M
requestN U
,U V
intV Y
adressIdZ b
,b c
intd g
userIdh n
)n o
;o p
public 
Task 
< 
ResponseDTO 
<  
string  &
>& '
>' (
DeleteAddressAsync) ;
(; <
int< ?
	addressId@ I
,I J
intK N
userIdO U
)U V
;V W
public 
Task 
< 
ResponseDTO 
<  
List  $
<$ %
AddressEntity% 2
>2 3
>3 4
>4 5 
GetAllAddressesAsync6 J
(J K
intK N
userIdO U
)U V
;V W
} 
} ≥
5D:\BridgeLabz\BookStore\RepoLayer\Helper\Publisher.cs
	namespace

 	
RepositoryLayer


 
.

 
Helper

  
{ 
public 

class 
	Publisher 
{ 	
private 
readonly 
ILogger $
<$ %
	Publisher% .
>. /
_logger0 7
;7 8
private 
readonly 
IConfiguration +
_configuration, :
;: ;
public 
	Publisher 
( 
ILogger $
<$ %
	Publisher% .
>. /
logger0 6
,6 7
IConfiguration7 E
configurationF S
)S T
{ 
_logger 
= 
logger  
;  !
_configuration 
=  
configuration! .
;. /
} 
public 
void 
PublishToQueue &
(& '
string' -
	queueName. 7
,7 8
string9 ?
message@ G
)G H
{ 	
try 
{ 
_logger 
. 
LogInformation &
(& '
$str' =
)= >
;> ?
var 
factory 
= 
new !
ConnectionFactory" 3
(3 4
)4 5
{ 
HostName 
= 
$str *
,* +
UserName 
= 
$str &
,& '
Password 
= 
$str &
} 
; 
using!! 
var!! 

connection!! $
=!!% &
factory!!' .
.!!. /
CreateConnection!!/ ?
(!!? @
)!!@ A
;!!A B
using"" 
var"" 
channel"" !
=""" #

connection""$ .
."". /
CreateModel""/ :
("": ;
)""; <
;""< =
channel$$ 
.$$ 
QueueDeclare$$ $
($$$ %
queue$$% *
:$$* +
	queueName$$, 5
,$$5 6
durable$$7 >
:$$> ?
false$$@ E
,$$E F
	exclusive$$G P
:$$P Q
false$$R W
,$$W X

autoDelete$$Y c
:$$c d
false$$e j
,$$j k
	arguments$$l u
:$$u v
null$$w {
)$${ |
;$$| }
var&& 
body&& 
=&& 
Encoding&& #
.&&# $
UTF8&&$ (
.&&( )
GetBytes&&) 1
(&&1 2
message&&2 9
)&&9 :
;&&: ;
channel(( 
.(( 
BasicPublish(( $
((($ %
exchange((% -
:((- .
$str((/ 1
,((1 2

routingKey((3 =
:((= >
	queueName((? H
,((H I
basicProperties((J Y
:((Y Z
null(([ _
,((_ `
body((a e
:((e f
body((g k
)((k l
;((l m
_logger** 
.** 
LogInformation** &
(**& '
$"**' )
$str**) J
{**J K
	queueName**K T
}**T U
$str**U W
{**W X
message**X _
}**_ `
"**` a
)**a b
;**b c
}++ 
catch,, 
(,, 
	Exception,, 
ex,, 
),,  
{-- 
_logger.. 
... 
LogInformation.. &
(..& '
$"..' )
$str..) G
{..G H
ex..H J
...J K
Message..K R
}..R S
"..S T
)..T U
;..U V
}// 
}00 	
}22 
}33 √%
:D:\BridgeLabz\BookStore\RepoLayer\Helper\PasswordHasher.cs
	namespace 	
RepositoryLayer
 
. 
Helper  
{		 
public

 

class

 
PasswordHasher

 
{ 
private 
const 
int 
SaltSize "
=# $
$num% '
;' (
private 
const 
int 
KeySize !
=" #
$num$ &
;& '
private 
const 
int 

Iterations $
=% &
$num' ,
;, -
public 
async 
Task 
< 
string  
>  !
HashPasswordAsync" 3
(3 4
string4 :
password; C
)C D
{ 	
return 
await 
Task 
. 
Run !
(! "
(" #
)# $
=>% '
{ 
using 
( 
var 
rng 
=  !
RandomNumberGenerator! 6
.6 7
Create7 =
(= >
)> ?
)? @
{ 
byte 
[ 
] 
salt 
=  !
new" %
byte& *
[* +
SaltSize+ 3
]3 4
;4 5
rng 
. 
GetBytes  
(  !
salt! %
)% &
;& '
using 
( 
var 
pbkdf2 %
=& '
new( +
Rfc2898DeriveBytes, >
(> ?
password? G
,G H
saltI M
,M N

IterationsO Y
,Y Z
HashAlgorithmName[ l
.l m
SHA256m s
)s t
)t u
{ 
byte 
[ 
] 
hash #
=$ %
pbkdf2& ,
., -
GetBytes- 5
(5 6
KeySize6 =
)= >
;> ?
return 
$" !
{! "
Convert" )
.) *
ToBase64String* 8
(8 9
salt9 =
)= >
}> ?
$str? @
{@ A
ConvertA H
.H I
ToBase64StringI W
(W X
hashX \
)\ ]
}] ^
"^ _
;_ `
} 
} 
} 
) 
; 
}   	
public"" 
async"" 
Task"" 
<"" 
bool"" 
>"" 
VerifyPasswordAsync""  3
(""3 4
string""4 :
password""; C
,""C D
string""D J

storedHash""K U
)""U V
{## 	
return$$ 
await$$ 
Task$$ 
.$$ 
Run$$ !
($$! "
($$" #
)$$# $
=>$$% '
{%% 
var&& 
parts&& 
=&& 

storedHash&& &
.&&& '
Split&&' ,
(&&, -
$char&&- 0
)&&0 1
;&&1 2
if'' 
('' 
parts'' 
.'' 
Length''  
!=''! #
$num''$ %
)''% &
return''' -
false''. 3
;''3 4
byte)) 
[)) 
])) 
salt)) 
=)) 
Convert)) %
.))% &
FromBase64String))& 6
())6 7
parts))7 <
[))< =
$num))= >
]))> ?
)))? @
;))@ A
byte** 
[** 
]** 
storedPasswordHash** )
=*** +
Convert**, 3
.**3 4
FromBase64String**4 D
(**D E
parts**E J
[**J K
$num**K L
]**L M
)**M N
;**N O
using,, 
(,, 
var,, 
pbkdf2,, !
=,," #
new,,$ '
Rfc2898DeriveBytes,,( :
(,,: ;
password,,; C
,,,C D
salt,,E I
,,,I J

Iterations,,K U
,,,U V
HashAlgorithmName,,W h
.,,h i
SHA256,,i o
),,o p
),,p q
{-- 
byte.. 
[.. 
].. 
computedHash.. '
=..( )
pbkdf2..* 0
...0 1
GetBytes..1 9
(..9 :
KeySize..: A
)..A B
;..B C
return// #
CryptographicOperations// 2
.//2 3
FixedTimeEquals//3 B
(//B C
storedPasswordHash//C U
,//U V
computedHash//W c
)//c d
;//d e
}00 
}11 
)11 
;11 
}22 	
}44 
}55 À
7D:\BridgeLabz\BookStore\RepoLayer\Helper\AuthService.cs
	namespace 	
RepositoryLayer
 
. 
Helper  
{ 
public 

class 
AuthService 
{ 
private 
readonly 
IConfiguration '
_configuration( 6
;6 7
public 
AuthService 
( 
IConfiguration )
configuration* 7
)7 8
{ 	
_configuration 
= 
configuration *
;* +
} 	
public 
string 
GenerateJwtToken &
(& '

UserEntity' 1

userEntity2 <
)< =
{ 	
var 
SecurityKey 
= 
new ! 
SymmetricSecurityKey" 6
(6 7
Encoding7 ?
.? @
UTF8@ D
.D E
GetBytesE M
(M N
_configurationN \
[\ ]
$str] f
]f g
)g h
)h i
;i j
var 
credentials 
= 
new !
SigningCredentials" 4
(4 5
SecurityKey5 @
,@ A
SecurityAlgorithmsB T
.T U

HmacSha256U _
)_ `
;` a
var 
claims 
= 
new 
[ 
] 
{ 
new 
Claim 
( 
$str 
, 

userEntity  *
.* +
UserId+ 1
.1 2
ToString2 :
(: ;
); <
)< =
,= >
new 
Claim 
( 
$str !
,! "

userEntity# -
.- .
Email. 3
)3 4
} 
; 
var   
token   
=   
new   
JwtSecurityToken   *
(  * +
issuer!! 
:!! 
_configuration!! &
[!!& '
$str!!' 3
]!!3 4
,!!4 5
audience"" 
:"" 
_configuration"" (
[""( )
$str"") 7
]""7 8
,""8 9
claims## 
:## 
claims## 
,## 
expires$$ 
:$$ 
DateTime$$ !
.$$! "
Now$$" %
.$$% &

AddMinutes$$& 0
($$0 1
$num$$1 3
)$$3 4
,$$4 5
signingCredentials%% "
:%%" #
credentials%%$ /
)&& 
;&& 
return(( 
new(( #
JwtSecurityTokenHandler(( .
(((. /
)((/ 0
.((0 1

WriteToken((1 ;
(((; <
token((< A
)((A B
;((B C
})) 	
}** 
}++ ≠	
:D:\BridgeLabz\BookStore\RepoLayer\DTO\UserAddressReqDTO.cs
	namespace 	
RepositoryLayer
 
. 
DTO 
{ 
public 

class 
UserAddressReqDTO "
{ 
public 
string 
Address 
{ 
get  #
;# $
set% (
;( )
}* +
public 
string 
City 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
State 
{ 
get !
;! "
set# &
;& '
}( )
public 
AddressType 
Type 
{  !
get" %
;% &
set' *
;* +
}, -
public 
string 
Name 
{ 
get  
;  !
set" %
;% &
}' (
public 
string 
MobileNumber "
{# $
get% (
;( )
set* -
;- .
}/ 0
} 
} Ù
4D:\BridgeLabz\BookStore\RepoLayer\DTO\ResponseDTO.cs
	namespace 	
RepositoryLayer
 
. 
DTO 
{ 
public		 

class		 
ResponseDTO		 
<		 
T		 
>		 
{

 
public 
bool 
Success 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Message 
{ 
get  #
;# $
set% (
;( )
}* +
public 
T 
Data 
{ 
get 
; 
set  
;  !
}" #
} 
} Ù
3D:\BridgeLabz\BookStore\RepoLayer\DTO\RegUserDTO.cs
	namespace		 	
RepositoryLayer		
 
.		 
DTO		 
{

 
public 

class 

RegUserDTO 
{ 
[ 	
Required	 
] 
public 
string 
	FirstName 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
public 
string 
LastName 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
[ 	
EmailAddress	 
] 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
string 
Password 
{  
get! $
;$ %
set& )
;) *
}+ ,
} 
} ƒ
1D:\BridgeLabz\BookStore\RepoLayer\DTO\OrderDTO.cs
	namespace 	
RepositoryLayer
 
. 
DTO 
{ 
public		 

class		 
OrderDTO		 
{

 
public 
int 
BookId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
public 
int 
	AddressId 
{ 
get "
;" #
set$ '
;' (
}) *
} 
} º
9D:\BridgeLabz\BookStore\RepoLayer\DTO\LoginResponseDTO.cs
	namespace 	
RepositoryLayer
 
. 
DTO 
{ 
public		 

class		 
LoginResponseDTO		 !
{

 
public 
string 
Email 
{ 
get !
;! "
set# &
;& '
}( )
public 
string 
Token 
{ 
get !
;! "
set# &
;& '
}( )
} 
} ≈

8D:\BridgeLabz\BookStore\RepoLayer\DTO\CartResponseDTO.cs
	namespace 	
RepositoryLayer
 
. 
DTO 
{ 
public		 

class		 
CartResponseDTO		  
{

 
public 
int 
CartId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
BookId 
{ 
get 
;  
set! $
;$ %
}& '
public 
string 
BookName 
{  
get! $
;$ %
set& )
;) *
}+ ,
public 
string 

AuthorName  
{! "
get# &
;& '
set( +
;+ ,
}- .
public 
float 
PricePerUnit !
{" #
get$ '
;' (
set) ,
;, -
}. /
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
public 
float 

TotalPrice 
{  !
get" %
;% &
set' *
;* +
}, -
} 
} ∏
8D:\BridgeLabz\BookStore\RepoLayer\DTO\AddToCartReqDTO.cs
	namespace 	
RepositoryLayer
 
. 
DTO 
{ 
public		 

class		 
AddToCartReqDTO		  
{

 
public 
int 
BookId 
{ 
get 
;  
set! $
;$ %
}& '
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
} 
} „
6D:\BridgeLabz\BookStore\RepoLayer\DTO\AddBookReqDTO.cs
	namespace 	
RepositoryLayer
 
. 
DTO 
{		 
public

 

class

 
AddBookReqDTO

 
{ 
[ 	
Required	 
] 
public 
string 
BookName 
{  
get! $
;$ %
set& )
;) *
}+ ,
[ 	
Required	 
] 
public 
string 
	BookImage 
{  !
get" %
;% &
set' *
;* +
}, -
[ 	
Required	 
] 
public 
string 
Description !
{" #
get$ '
;' (
set) ,
;, -
}. /
[ 	
Required	 
] 
public 
string 

AuthorName  
{! "
get# &
;& '
set( +
;+ ,
}- .
[ 	
Required	 
] 
public 
int 
Quantity 
{ 
get !
;! "
set# &
;& '
}( )
[ 	
Required	 
] 
public 
float 
Price 
{ 
get  
;  !
set" %
;% &
}' (
} 
} ∏
8D:\BridgeLabz\BookStore\RepoLayer\Context\UserContext.cs
	namespace		 	
RepositoryLayer		
 
.		 
Context		 !
{

 
public 

class 
UserContext 
: 
	DbContext &
{ 
public 
UserContext 
( 
DbContextOptions +
<+ ,
UserContext, 7
>7 8
options9 @
)@ A
:B C
baseD H
(H I
optionsI P
)P Q
{ 	
} 	
public 
DbSet 
< 

UserEntity 
>  
Users! &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 

BookEntity 
>  
Books! &
{' (
get) ,
;, -
set. 1
;1 2
}3 4
public 
DbSet 
< 

CartEntity 
>  
Cart! %
{& '
get( +
;+ ,
set- 0
;0 1
}2 3
public 
DbSet 
< 
WishListEntity #
># $
WishList% -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
public 
DbSet 
< 
OrderEntity  
>  !
Orders" (
{) *
get+ .
;. /
set0 3
;3 4
}5 6
public 
DbSet 
< 
AddressEntity "
>" #
	Addresses$ -
{. /
get0 3
;3 4
set5 8
;8 9
}: ;
} 
} 